module.exports=(()=>{"use strict";var e={1454:(e,t,i)=>{i.r(t),i.d(t,{default:()=>R});var n=6e4;function o(e){return e.getTime()%n}function a(e){var t=new Date(e.getTime()),i=Math.ceil(t.getTimezoneOffset());t.setSeconds(0,0);var a=i>0?(n+o(t))%n:o(t);return i*n+a}function r(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function s(e){r(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function c(e,t){r(2,arguments);var i=s(e),n=s(t),o=i.getTime()-n.getTime();return o<0?-1:o>0?1:o}function d(e,t){r(2,arguments);var i=s(e),n=s(t);return i.getTime()-n.getTime()}function m(e,t){r(2,arguments);var i=d(e,t)/1e3;return i>0?Math.floor(i):Math.ceil(i)}function u(e){return function(e,t){if(null==e)throw new TypeError("assign requires that input parameter not be null or undefined");for(var i in t=t||{})t.hasOwnProperty(i)&&(e[i]=t[i]);return e}({},e)}var l={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function g(e){return function(t){var i=t||{},n=i.width?String(i.width):e.defaultWidth;return e.formats[n]||e.formats[e.defaultWidth]}}var h,p={date:g({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:g({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:g({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},f={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function w(e){return function(t,i){var n,o=i||{};if("formatting"===(o.context?String(o.context):"standalone")&&e.formattingValues){var a=e.defaultFormattingWidth||e.defaultWidth,r=o.width?String(o.width):a;n=e.formattingValues[r]||e.formattingValues[a]}else{var s=e.defaultWidth,c=o.width?String(o.width):e.defaultWidth;n=e.values[c]||e.values[s]}return n[e.argumentCallback?e.argumentCallback(t):t]}}function v(e){return function(t,i){var n=String(t),o=i||{},a=o.width,r=a&&e.matchPatterns[a]||e.matchPatterns[e.defaultMatchWidth],s=n.match(r);if(!s)return null;var c,d=s[0],m=a&&e.parsePatterns[a]||e.parsePatterns[e.defaultParseWidth];return c="[object Array]"===Object.prototype.toString.call(m)?function(e,t){for(var i=0;i<e.length;i++)if(e[i].test(d))return i}(m):function(e,t){for(var i in e)if(e.hasOwnProperty(i)&&e[i].test(d))return i}(m),c=e.valueCallback?e.valueCallback(c):c,{value:c=o.valueCallback?o.valueCallback(c):c,rest:n.slice(d.length)}}}const y={code:"en-US",formatDistance:function(e,t,i){var n;return i=i||{},n="string"==typeof l[e]?l[e]:1===t?l[e].one:l[e].other.replace("{{count}}",t),i.addSuffix?i.comparison>0?"in "+n:n+" ago":n},formatLong:p,formatRelative:function(e,t,i,n){return f[e]},localize:{ordinalNumber:function(e,t){var i=Number(e),n=i%100;if(n>20||n<10)switch(n%10){case 1:return i+"st";case 2:return i+"nd";case 3:return i+"rd"}return i+"th"},era:w({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:w({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return Number(e)-1}}),month:w({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:w({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:w({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(h={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e,t){var i=String(e),n=t||{},o=i.match(h.matchPattern);if(!o)return null;var a=o[0],r=i.match(h.parsePattern);if(!r)return null;var s=h.valueCallback?h.valueCallback(r[0]):r[0];return{value:s=n.valueCallback?n.valueCallback(s):s,rest:i.slice(a.length)}}),era:v({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:v({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:v({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:v({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:v({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};var b=1440,C=43200,S=525600;function k(e,t,i){r(2,arguments);var n=i||{},o=n.locale||y;if(!o.formatDistance)throw new RangeError("locale must contain localize.formatDistance property");var d=c(e,t);if(isNaN(d))throw new RangeError("Invalid time value");var l,g,h=u(n);h.addSuffix=Boolean(n.addSuffix),h.comparison=d,d>0?(l=s(t),g=s(e)):(l=s(e),g=s(t));var p,f=null==n.roundingMethod?"round":String(n.roundingMethod);if("floor"===f)p=Math.floor;else if("ceil"===f)p=Math.ceil;else{if("round"!==f)throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");p=Math.round}var w,v=m(g,l),k=(a(g)-a(l))/1e3,R=p((v-k)/60);if("second"===(w=null==n.unit?R<1?"second":R<60?"minute":R<b?"hour":R<C?"day":R<S?"month":"year":String(n.unit)))return o.formatDistance("xSeconds",v,h);if("minute"===w)return o.formatDistance("xMinutes",R,h);if("hour"===w){var x=p(R/60);return o.formatDistance("xHours",x,h)}if("day"===w){var T=p(R/b);return o.formatDistance("xDays",T,h)}if("month"===w){var P=p(R/C);return o.formatDistance("xMonths",P,h)}if("year"===w){var M=p(R/S);return o.formatDistance("xYears",M,h)}throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'")}function R(e,t){return r(1,arguments),k(e,Date.now(),t)}},516:(e,t,i)=>{function n(e,t){void 0===t&&(t=!1);var i=e.length,n=0,s="",c=0,d=16,m=0,u=0,l=0,g=0,h=0;function p(t,i){for(var o=0,a=0;o<t||!i;){var r=e.charCodeAt(n);if(r>=48&&r<=57)a=16*a+r-48;else if(r>=65&&r<=70)a=16*a+r-65+10;else{if(!(r>=97&&r<=102))break;a=16*a+r-97+10}n++,o++}return o<t&&(a=-1),a}function f(){if(s="",h=0,c=n,u=m,g=l,n>=i)return c=i,d=17;var t=e.charCodeAt(n);if(o(t)){do{n++,s+=String.fromCharCode(t),t=e.charCodeAt(n)}while(o(t));return d=15}if(a(t))return n++,s+=String.fromCharCode(t),13===t&&10===e.charCodeAt(n)&&(n++,s+="\n"),m++,l=n,d=14;switch(t){case 123:return n++,d=1;case 125:return n++,d=2;case 91:return n++,d=3;case 93:return n++,d=4;case 58:return n++,d=6;case 44:return n++,d=5;case 34:return n++,s=function(){for(var t="",o=n;;){if(n>=i){t+=e.substring(o,n),h=2;break}var r=e.charCodeAt(n);if(34===r){t+=e.substring(o,n),n++;break}if(92!==r){if(r>=0&&r<=31){if(a(r)){t+=e.substring(o,n),h=2;break}h=6}n++}else{if(t+=e.substring(o,n),++n>=i){h=2;break}switch(e.charCodeAt(n++)){case 34:t+='"';break;case 92:t+="\\";break;case 47:t+="/";break;case 98:t+="\b";break;case 102:t+="\f";break;case 110:t+="\n";break;case 114:t+="\r";break;case 116:t+="\t";break;case 117:var s=p(4,!0);s>=0?t+=String.fromCharCode(s):h=4;break;default:h=5}o=n}}return t}(),d=10;case 47:var f=n-1;if(47===e.charCodeAt(n+1)){for(n+=2;n<i&&!a(e.charCodeAt(n));)n++;return s=e.substring(f,n),d=12}if(42===e.charCodeAt(n+1)){n+=2;for(var v=i-1,y=!1;n<v;){var b=e.charCodeAt(n);if(42===b&&47===e.charCodeAt(n+1)){n+=2,y=!0;break}n++,a(b)&&(13===b&&10===e.charCodeAt(n)&&n++,m++,l=n)}return y||(n++,h=1),s=e.substring(f,n),d=13}return s+=String.fromCharCode(t),n++,d=16;case 45:if(s+=String.fromCharCode(t),++n===i||!r(e.charCodeAt(n)))return d=16;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return s+=function(){var t=n;if(48===e.charCodeAt(n))n++;else for(n++;n<e.length&&r(e.charCodeAt(n));)n++;if(n<e.length&&46===e.charCodeAt(n)){if(!(++n<e.length&&r(e.charCodeAt(n))))return h=3,e.substring(t,n);for(n++;n<e.length&&r(e.charCodeAt(n));)n++}var i=n;if(n<e.length&&(69===e.charCodeAt(n)||101===e.charCodeAt(n)))if((++n<e.length&&43===e.charCodeAt(n)||45===e.charCodeAt(n))&&n++,n<e.length&&r(e.charCodeAt(n))){for(n++;n<e.length&&r(e.charCodeAt(n));)n++;i=n}else h=3;return e.substring(t,i)}(),d=11;default:for(;n<i&&w(t);)n++,t=e.charCodeAt(n);if(c!==n){switch(s=e.substring(c,n)){case"true":return d=8;case"false":return d=9;case"null":return d=7}return d=16}return s+=String.fromCharCode(t),n++,d=16}}function w(e){if(o(e)||a(e))return!1;switch(e){case 125:case 93:case 123:case 91:case 34:case 58:case 44:case 47:return!1}return!0}return{setPosition:function(e){n=e,s="",c=0,d=16,h=0},getPosition:function(){return n},scan:t?function(){var e;do{e=f()}while(e>=12&&e<=15);return e}:f,getToken:function(){return d},getTokenValue:function(){return s},getTokenOffset:function(){return c},getTokenLength:function(){return n-c},getTokenStartLine:function(){return u},getTokenStartCharacter:function(){return c-g},getTokenError:function(){return h}}}function o(e){return 32===e||9===e||11===e||12===e||160===e||5760===e||e>=8192&&e<=8203||8239===e||8287===e||12288===e||65279===e}function a(e){return 10===e||13===e||8232===e||8233===e}function r(e){return e>=48&&e<=57}function s(e,t,i){var o,a,r,s,m;if(t){for(s=t.offset,m=s+t.length,r=s;r>0&&!d(e,r-1);)r--;for(var u=m;u<e.length&&!d(e,u);)u++;a=e.substring(r,u),o=function(e,t){for(var i=0,n=0,o=t.tabSize||4;i<e.length;){var a=e.charAt(i);if(" "===a)n++;else{if("\t"!==a)break;n+=o}i++}return Math.floor(n/o)}(a,i)}else a=e,o=0,r=0,s=0,m=e.length;var l,g=function(e,t){for(var i=0;i<t.length;i++){var n=t.charAt(i);if("\r"===n)return i+1<t.length&&"\n"===t.charAt(i+1)?"\r\n":"\r";if("\n"===n)return"\n"}return e&&e.eol||"\n"}(i,e),h=!1,p=0;l=i.insertSpaces?c(" ",i.tabSize||4):"\t";var f=n(a,!1),w=!1;function v(){return g+c(l,o+p)}function y(){var e=f.scan();for(h=!1;15===e||14===e;)h=h||14===e,e=f.scan();return w=16===e||0!==f.getTokenError(),e}var b=[];function C(i,n,o){w||t&&!(n<m&&o>s)||e.substring(n,o)===i||b.push({offset:n,length:o-n,content:i})}var S=y();if(17!==S){var k=f.getTokenOffset()+r;C(c(l,o),r,k)}for(;17!==S;){for(var R=f.getTokenOffset()+f.getTokenLength()+r,x=y(),T="",P=!1;!h&&(12===x||13===x);)C(" ",R,f.getTokenOffset()+r),R=f.getTokenOffset()+f.getTokenLength()+r,T=(P=12===x)?v():"",x=y();if(2===x)1!==S&&(p--,T=v());else if(4===x)3!==S&&(p--,T=v());else{switch(S){case 3:case 1:p++,T=v();break;case 5:case 12:T=v();break;case 13:h?T=v():P||(T=" ");break;case 6:P||(T=" ");break;case 10:if(6===x){P||(T="");break}case 7:case 8:case 9:case 11:case 2:case 4:12===x||13===x?P||(T=" "):5!==x&&17!==x&&(w=!0);break;case 16:w=!0}!h||12!==x&&13!==x||(T=v())}17===x&&(T=i.insertFinalNewline?g:""),C(T,R,f.getTokenOffset()+r),S=x}return b}function c(e,t){for(var i="",n=0;n<t;n++)i+=e;return i}function d(e,t){return-1!=="\r\n".indexOf(e.charAt(t))}var m;function u(e,t,i){void 0===t&&(t=[]),void 0===i&&(i=m.DEFAULT);var n={type:"array",offset:-1,length:-1,children:[],parent:void 0};function o(e){"property"===n.type&&(n.length=e-n.offset,n=n.parent)}function a(e){return n.children.push(e),e}g(e,{onObjectBegin:function(e){n=a({type:"object",offset:e,length:-1,parent:n,children:[]})},onObjectProperty:function(e,t,i){(n=a({type:"property",offset:t,length:-1,parent:n,children:[]})).children.push({type:"string",value:e,offset:t,length:i,parent:n})},onObjectEnd:function(e,t){o(e+t),n.length=e+t-n.offset,n=n.parent,o(e+t)},onArrayBegin:function(e,t){n=a({type:"array",offset:e,length:-1,parent:n,children:[]})},onArrayEnd:function(e,t){n.length=e+t-n.offset,n=n.parent,o(e+t)},onLiteralValue:function(e,t,i){a({type:h(e),offset:t,length:i,parent:n,value:e}),o(t+i)},onSeparator:function(e,t,i){"property"===n.type&&(":"===e?n.colonOffset=t:","===e&&o(t))},onError:function(e,i,n){t.push({error:e,offset:i,length:n})}},i);var r=n.children[0];return r&&delete r.parent,r}function l(e,t){if(e){for(var i=e,n=0,o=t;n<o.length;n++){var a=o[n];if("string"==typeof a){if("object"!==i.type||!Array.isArray(i.children))return;for(var r=!1,s=0,c=i.children;s<c.length;s++){var d=c[s];if(Array.isArray(d.children)&&d.children[0].value===a){i=d.children[1],r=!0;break}}if(!r)return}else{var m=a;if("array"!==i.type||m<0||!Array.isArray(i.children)||m>=i.children.length)return;i=i.children[m]}}return i}}function g(e,t,i){void 0===i&&(i=m.DEFAULT);var o=n(e,!1);function a(e){return e?function(){return e(o.getTokenOffset(),o.getTokenLength(),o.getTokenStartLine(),o.getTokenStartCharacter())}:function(){return!0}}function r(e){return e?function(t){return e(t,o.getTokenOffset(),o.getTokenLength(),o.getTokenStartLine(),o.getTokenStartCharacter())}:function(){return!0}}var s=a(t.onObjectBegin),c=r(t.onObjectProperty),d=a(t.onObjectEnd),u=a(t.onArrayBegin),l=a(t.onArrayEnd),g=r(t.onLiteralValue),h=r(t.onSeparator),p=a(t.onComment),f=r(t.onError),w=i&&i.disallowComments,v=i&&i.allowTrailingComma;function y(){for(;;){var e=o.scan();switch(o.getTokenError()){case 4:b(14);break;case 5:b(15);break;case 3:b(13);break;case 1:w||b(11);break;case 2:b(12);break;case 6:b(16)}switch(e){case 12:case 13:w?b(10):p();break;case 16:b(1);break;case 15:case 14:break;default:return e}}}function b(e,t,i){if(void 0===t&&(t=[]),void 0===i&&(i=[]),f(e),t.length+i.length>0)for(var n=o.getToken();17!==n;){if(-1!==t.indexOf(n)){y();break}if(-1!==i.indexOf(n))break;n=y()}}function C(e){var t=o.getTokenValue();return e?g(t):c(t),y(),!0}return y(),17===o.getToken()?!!i.allowEmptyContent||(b(4,[],[]),!1):function e(){switch(o.getToken()){case 3:return function(){u(),y();for(var t=!1;4!==o.getToken()&&17!==o.getToken();){if(5===o.getToken()){if(t||b(4,[],[]),h(","),y(),4===o.getToken()&&v)break}else t&&b(6,[],[]);e()||b(4,[],[4,5]),t=!0}return l(),4!==o.getToken()?b(8,[4],[]):y(),!0}();case 1:return function(){s(),y();for(var t=!1;2!==o.getToken()&&17!==o.getToken();){if(5===o.getToken()){if(t||b(4,[],[]),h(","),y(),2===o.getToken()&&v)break}else t&&b(6,[],[]);(10!==o.getToken()?(b(3,[],[2,5]),0):(C(!1),6===o.getToken()?(h(":"),y(),e()||b(4,[],[2,5])):b(5,[],[2,5]),1))||b(4,[],[2,5]),t=!0}return d(),2!==o.getToken()?b(7,[2],[]):y(),!0}();case 10:return C(!0);default:return function(){switch(o.getToken()){case 11:var e=o.getTokenValue(),t=Number(e);isNaN(t)&&(b(2),t=0),g(t);break;case 7:g(null);break;case 8:g(!0);break;case 9:g(!1);break;default:return!1}return y(),!0}()}}()?(17!==o.getToken()&&b(9,[],[]),!0):(b(4,[],[]),!1)}function h(e){switch(typeof e){case"boolean":return"boolean";case"number":return"number";case"string":return"string";case"object":return e?Array.isArray(e)?"array":"object":"null";default:return"null"}}function p(e,t,i){if(!i.formattingOptions)return[t];var n=f(e,t),o=t.offset,a=t.offset+t.content.length;if(0===t.length||0===t.content.length){for(;o>0&&!d(n,o-1);)o--;for(;a<n.length&&!d(n,a);)a++}for(var r=s(n,{offset:o,length:a-o},i.formattingOptions),c=r.length-1;c>=0;c--){var m=r[c];n=f(n,m),o=Math.min(o,m.offset),a=Math.max(a,m.offset+m.length),a+=m.content.length-m.length}return[{offset:o,length:e.length-(n.length-a)-o,content:n.substring(o,a)}]}function f(e,t){return e.substring(0,t.offset)+t.content+e.substring(t.offset+t.length)}i.r(t),i.d(t,{applyEdits:()=>A,createScanner:()=>w,findNodeAtLocation:()=>C,findNodeAtOffset:()=>S,format:()=>M,getLocation:()=>v,getNodePath:()=>k,getNodeValue:()=>R,modify:()=>V,parse:()=>y,parseTree:()=>b,printParseErrorCode:()=>P,stripComments:()=>T,visit:()=>x}),function(e){e.DEFAULT={allowTrailingComma:!1}}(m||(m={}));var w=n,v=function(e,t){var i=[],n=new Object,o=void 0,a={value:{},offset:0,length:0,type:"object",parent:void 0},r=!1;function s(e,t,i,n){a.value=e,a.offset=t,a.length=i,a.type=n,a.colonOffset=void 0,o=a}try{g(e,{onObjectBegin:function(e,a){if(t<=e)throw n;o=void 0,r=t>e,i.push("")},onObjectProperty:function(e,o,a){if(t<o)throw n;if(s(e,o,a,"property"),i[i.length-1]=e,t<=o+a)throw n},onObjectEnd:function(e,a){if(t<=e)throw n;o=void 0,i.pop()},onArrayBegin:function(e,a){if(t<=e)throw n;o=void 0,i.push(0)},onArrayEnd:function(e,a){if(t<=e)throw n;o=void 0,i.pop()},onLiteralValue:function(e,i,o){if(t<i)throw n;if(s(e,i,o,h(e)),t<=i+o)throw n},onSeparator:function(e,a,s){if(t<=a)throw n;if(":"===e&&o&&"property"===o.type)o.colonOffset=a,r=!1,o=void 0;else if(","===e){var c=i[i.length-1];"number"==typeof c?i[i.length-1]=c+1:(r=!0,i[i.length-1]=""),o=void 0}}})}catch(e){if(e!==n)throw e}return{path:i,previousNode:o,isAtPropertyKey:r,matches:function(e){for(var t=0,n=0;t<e.length&&n<i.length;n++)if(e[t]===i[n]||"*"===e[t])t++;else if("**"!==e[t])return!1;return t===e.length}}},y=function(e,t,i){void 0===t&&(t=[]),void 0===i&&(i=m.DEFAULT);var n=null,o=[],a=[];function r(e){Array.isArray(o)?o.push(e):null!==n&&(o[n]=e)}return g(e,{onObjectBegin:function(){var e={};r(e),a.push(o),o=e,n=null},onObjectProperty:function(e){n=e},onObjectEnd:function(){o=a.pop()},onArrayBegin:function(){var e=[];r(e),a.push(o),o=e,n=null},onArrayEnd:function(){o=a.pop()},onLiteralValue:r,onError:function(e,i,n){t.push({error:e,offset:i,length:n})}},i),o[0]},b=u,C=l,S=function e(t,i,n){if(void 0===n&&(n=!1),function(e,t,i){return void 0===i&&(i=!1),t>=e.offset&&t<e.offset+e.length||i&&t===e.offset+e.length}(t,i,n)){var o=t.children;if(Array.isArray(o))for(var a=0;a<o.length&&o[a].offset<=i;a++){var r=e(o[a],i,n);if(r)return r}return t}},k=function e(t){if(!t.parent||!t.parent.children)return[];var i=e(t.parent);if("property"===t.parent.type){var n=t.parent.children[0].value;i.push(n)}else if("array"===t.parent.type){var o=t.parent.children.indexOf(t);-1!==o&&i.push(o)}return i},R=function e(t){switch(t.type){case"array":return t.children.map(e);case"object":for(var i=Object.create(null),n=0,o=t.children;n<o.length;n++){var a=o[n],r=a.children[1];r&&(i[a.children[0].value]=e(r))}return i;case"null":case"string":case"number":case"boolean":return t.value;default:return}},x=g,T=function(e,t){var i,o,a=n(e),r=[],s=0;do{switch(o=a.getPosition(),i=a.scan()){case 12:case 13:case 17:s!==o&&r.push(e.substring(s,o)),void 0!==t&&r.push(a.getTokenValue().replace(/[^\r\n]/g,t)),s=a.getPosition()}}while(17!==i);return r.join("")};function P(e){switch(e){case 1:return"InvalidSymbol";case 2:return"InvalidNumberFormat";case 3:return"PropertyNameExpected";case 4:return"ValueExpected";case 5:return"ColonExpected";case 6:return"CommaExpected";case 7:return"CloseBraceExpected";case 8:return"CloseBracketExpected";case 9:return"EndOfFileExpected";case 10:return"InvalidCommentToken";case 11:return"UnexpectedEndOfComment";case 12:return"UnexpectedEndOfString";case 13:return"UnexpectedEndOfNumber";case 14:return"InvalidUnicode";case 15:return"InvalidEscapeCharacter";case 16:return"InvalidCharacter"}return"<unknown ParseErrorCode>"}function M(e,t,i){return s(e,t,i)}function V(e,t,i,n){return function(e,t,i,n){for(var o,a=t.slice(),r=u(e,[]),s=void 0,c=void 0;a.length>0&&(c=a.pop(),void 0===(s=l(r,a))&&void 0!==i);)"string"==typeof c?((o={})[c]=i,i=o):i=[i];if(s){if("object"===s.type&&"string"==typeof c&&Array.isArray(s.children)){var d=l(s,[c]);if(void 0!==d){if(void 0===i){if(!d.parent)throw new Error("Malformed AST");var m=s.children.indexOf(d.parent),g=void 0,h=d.parent.offset+d.parent.length;return m>0?g=(k=s.children[m-1]).offset+k.length:(g=s.offset+1,s.children.length>1&&(h=s.children[1].offset)),p(e,{offset:g,length:h-g,content:""},n)}return p(e,{offset:d.offset,length:d.length,content:JSON.stringify(i)},n)}if(void 0===i)return[];var f=JSON.stringify(c)+": "+JSON.stringify(i),w=void 0;return p(e,w=(R=n.getInsertionIndex?n.getInsertionIndex(s.children.map((function(e){return e.children[0].value}))):s.children.length)>0?{offset:(k=s.children[R-1]).offset+k.length,length:0,content:","+f}:0===s.children.length?{offset:s.offset+1,length:0,content:f}:{offset:s.offset+1,length:0,content:f+","},n)}if("array"===s.type&&"number"==typeof c&&Array.isArray(s.children)){var v=c;if(-1===v)return f=""+JSON.stringify(i),w=void 0,p(e,w=0===s.children.length?{offset:s.offset+1,length:0,content:f}:{offset:(k=s.children[s.children.length-1]).offset+k.length,length:0,content:","+f},n);if(void 0===i&&s.children.length>=0){var y=c,b=s.children[y];if(w=void 0,1===s.children.length)w={offset:s.offset+1,length:s.length-2,content:""};else if(s.children.length-1===y){var C=(k=s.children[y-1]).offset+k.length;w={offset:C,length:s.offset+s.length-2-C,content:""}}else w={offset:b.offset,length:s.children[y+1].offset-b.offset,content:""};return p(e,w,n)}if(void 0!==i){if(w=void 0,f=""+JSON.stringify(i),!n.isArrayInsertion&&s.children.length>c){var S=s.children[c];w={offset:S.offset,length:S.length,content:f}}else if(0===s.children.length||0===c)w={offset:s.offset+1,length:0,content:0===s.children.length?f:f+","};else{var k,R=c>s.children.length?s.children.length:c;w={offset:(k=s.children[R-1]).offset+k.length,length:0,content:","+f}}return p(e,w,n)}throw new Error("Can not "+(void 0===i?"remove":n.isArrayInsertion?"insert":"modify")+" Array index "+v+" as length is not sufficient")}throw new Error("Can not add "+("number"!=typeof c?"index":"property")+" to parent of type "+s.type)}if(void 0===i)throw new Error("Can not delete in empty document");return p(e,{offset:r?r.offset:0,length:r?r.length:0,content:JSON.stringify(i)},n)}(e,t,i,n)}function A(e,t){for(var i=t.length-1;i>=0;i--)e=f(e,t[i]);return e}},7095:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.apply=t.magitApplyEntityAtPoint=void 0;const n=i(7549),o=i(9957),a=i(2849),r=i(1702),s=i(8603),c=i(8202),d=i(4542),m=i(6713),u=i(2977);t.magitApplyEntityAtPoint=async function(e,t){const i=t.click(n.window.activeTextEditor.selection.active);if(i instanceof o.CommitItemView){const t=i.commit;return s.cherryPick(e,t.hash,{noCommit:!0})}if(i instanceof c.BranchListingView||i instanceof d.RemoteBranchListingView||i instanceof m.TagListingView){const t=i.ref;if(t.commit)return s.cherryPick(e,t.commit,{noCommit:!0})}else{if(i instanceof r.StashItemView){const t=["stash","apply","--index",`stash@{${i.stash.index}}`];return a.gitRun(e.gitRepository,t)}{const t=await u.default.chooseRef(e,"Apply changes from commit");if(t)return s.cherryPick(e,t,{noCommit:!0})}}},t.apply=async function(e,t,{index:i,reverse:n}){const o=["apply","--ignore-space-change"];return i&&o.push("--cached"),n&&o.push("--reverse"),a.gitRun(e.gitRepository,o,{input:t})}},3934:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.blameFile=void 0;const n=i(7549),o=i(2849),a=i(9410),r=i(3551);t.blameFile=async function(e,t){const i=await o.gitRun(e.gitRepository,["blame",t.fsPath]),s=a.BlameView.encodeLocation(e,t);return r.default.showView(s,new a.BlameView(s,i.stdout),{viewColumn:n.ViewColumn.Active})}},499:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.showRefs=t.branching=void 0;const n=i(7549),o=i(6645),a=i(5659),r=i(2849),s=i(2977),c=i(3551),d=i(7456),m=[{label:"b",description:"Checkout",action:async function(e){return l(e,e.repository.refs)}},{label:"l",description:"Checkout local branch",action:async function(e){return l(e,e.repository.refs.filter((e=>0===e.type)))}},{label:"c",description:"Checkout new branch",action:async function(e){return g(e,!0)}},{label:"n",description:"Create new branch",action:async function(e){return g(e,!1)}},{label:"m",description:"Rename",action:async function({repository:e}){const t=await s.default.chooseRef(e,"Rename branch",!0,!1,!1);if(t){const i=await n.window.showInputBox({prompt:`Rename branch '${t}' to:`});if(i&&i.length>0){const n=["branch","--move",t,i];return r.gitRun(e.gitRepository,n)}throw new Error("No name given for branch rename")}}},{label:"x",description:"Reset",action:async function({repository:e}){var t;const i=await s.default.chooseRef(e,"Reset branch",!0,!1,!1),n=await s.default.chooseRef(e,`Reset ${i} to`);if(i&&n){if(i!==(null===(t=e.HEAD)||void 0===t?void 0:t.name)){const t=["update-ref",`refs/heads/${i}`,`refs/heads/${n}`];return r.gitRun(e.gitRepository,t)}{const t=["reset","--hard",n];if(!s.default.magitAnythingModified(e))return await r.gitRun(e.gitRepository,t);if(await s.default.confirmAction("Uncommitted changes will be lost. Proceed?"))return await r.gitRun(e.gitRepository,t)}}}},{label:"k",description:"Delete",action:async function({repository:e}){const t=await s.default.chooseRef(e,"Delete",!1,!1,!1);if(t)try{await r.gitRun(e.gitRepository,["branch","--delete",t])}catch(i){if("BranchNotFullyMerged"===i.gitErrorCode&&await s.default.confirmAction(`Delete unmerged branch ${t}?`))return await r.gitRun(e.gitRepository,["branch","--delete","--force",t])}}}],u=[{label:"y",description:"Checkout pull request",action:async function(e){var t,i;const n=e.repository,o=null===(t=n.forgeState)||void 0===t?void 0:t.pullRequests;if(void 0===n.forgeState||!(null==o?void 0:o.length))return;const s=o.map(((e,t)=>({label:e.number.toString(),description:e.title,meta:t}))),c=await a.PickMenuUtil.showMenu(s,"Checkout pull request");if(c){const e=o[c];return await r.gitRun(n.gitRepository,["fetch",null===(i=n.forgeState)||void 0===i?void 0:i.forgeRemote,`${e.remoteRef}:pr-${e.number}`]),r.gitRun(n.gitRepository,["checkout",`pr-${e.number}`])}}}];async function l({repository:e},t){const i=await s.default.chooseRef(e,"Checkout");if(i){const t=["checkout",i];return r.gitRun(e.gitRepository,t)}}async function g({repository:e},t){const i=await s.default.chooseRef(e,"Create and checkout branch starting at",!0,!0);if(i){const o=e.refs.find((e=>1===e.type&&e.name===i));let a="";if(o&&o.remote){const t=i.substring(o.remote.length+1);e.refs.find((e=>0===e.type&&e.name===t))||(a=t)}const s=await n.window.showInputBox({prompt:"Name for new branch",value:a});if(s&&s.length>0){let n=[];return n=t?["checkout","-b"]:["branch"],n.push(s,i),r.gitRun(e.gitRepository,n)}throw new Error("No name given for new branch")}}t.branching=async function(e){let t={title:"Branching",commands:Array.from(m)};return null!==e.forgeState&&t.commands.push(...u),o.MenuUtil.showMenu(t,{repository:e})},t.showRefs=async function(e){const t=d.default.encodeLocation(e);let i=c.default.createOrUpdateView(e,t,(()=>new d.default(t,e)));return c.default.showView(t,i,{viewColumn:n.ViewColumn.Active})}},8603:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.cherryPick=t.cherryPicking=void 0;const n=i(2849),o=i(6645),a=i(2977),r=i(3426),s={title:"Cherry-picking",commands:[{label:"A",description:"Continue",action:async function({repository:e}){return r.runCommitLikeCommand(e,["cherry-pick","--continue"])}},{label:"s",description:"Skip",action:e=>m(e,"--skip")},{label:"a",description:"Abort",action:e=>m(e,"--abort")}]},c={title:"Cherry-picking",commands:[{label:"A",description:"Pick",action:async function({repository:e,switches:t}){const i=await a.default.chooseRef(e,"Cherry-pick");if(i)return d(e,i,{edit:!!(null==t?void 0:t.find((e=>"-e"===e.key&&e.activated)))})}},{label:"a",description:"Apply",action:async function({repository:e}){const t=await a.default.chooseRef(e,"Apply changes from commit");if(t)return d(e,t,{noCommit:!0})}}]};async function d(e,t,{noCommit:i,edit:o}={}){const a=["cherry-pick"];if(i)a.push("--no-commit");else{if(o)return a.push("--edit"),a.push(t),r.runCommitLikeCommand(e,a,{updatePostCommitTask:!0});a.push("--ff")}return a.push(t),n.gitRun(e.gitRepository,a)}async function m({repository:e},t){const i=["cherry-pick",t];return n.gitRun(e.gitRepository,i)}t.cherryPicking=async function(e){if(e.cherryPickingState)return o.MenuUtil.showMenu(s,{repository:e});{const t=[{key:"-e",name:"--edit",description:"Edit commit messages"},{key:"-x",name:"-x",description:"Reference cherry in commit message"}];return o.MenuUtil.showMenu(c,{repository:e,switches:t})}},t.cherryPick=d},7218:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getLatestGitError=t.CommandPrimer=void 0;const n=i(2977),o=i(7549),a=i(7849),r=i(7217);t.CommandPrimer=class{static primeRepo(e,t=!0){return async i=>{const o=await n.default.getCurrentMagitRepo(i.document.uri);if(o)try{await e(o)}catch(e){this.handleError(o,e)}finally{t&&n.default.magitStatusAndUpdate(o)}}}static primeRepoAndView(e,t=!0){return async i=>{const[o,a]=n.default.getCurrentMagitRepoAndView(i.document.uri);if(o&&a)try{await e(o,a)}catch(e){this.handleError(o,e)}finally{t&&n.default.magitStatusAndUpdate(o)}}}static primeFileCommand(e,t=!0){return async i=>{const o=i.document.uri,a=await n.default.getCurrentMagitRepo(o);if(a)try{await e(a,o)}catch(e){this.handleError(a,e)}finally{t&&n.default.magitStatusAndUpdate(a)}}}static handleError(e,t){t.gitErrorCode||t.stderr||t instanceof r.MagitError?function(e,t){s.set(e.uri.fsPath,t)}(e,a.default.formatError(t)):(o.window.showErrorMessage(a.default.formatError(t)),console.error(t))}};let s=new Map;t.getLatestGitError=function(e){let t=s.get(e.uri.fsPath);return s.delete(e.uri.fsPath),t}},3426:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.runCommitLikeCommand=t.setCodePath=t.rewordCommit=t.ammendCommit=t.commit=t.magitCommit=void 0;const n=i(7549),o=i(5058),a=i(1765),r=i(2849),s=i(6645),c=i(2977),d=i(9238),m=i(5923),u=i(5622),l=i(7135),g=i(5747),h=i(3551),p=i(7849),f={title:"Committing",commands:[{label:"c",description:"Commit",action:w},{label:"a",description:"Amend",action:e=>v(e,["--amend"])},{label:"e",description:"Extend",action:e=>v(e,["--amend","--no-edit"])},{label:"w",description:"Reword",action:e=>y(e,["--amend","--only"])},{label:"f",description:"Fixup",action:e=>async function({repository:e,switches:t}){const i=await c.default.chooseCommit(e,"Fixup commit");if(i){const n=["commit",...s.MenuUtil.switchesToArgs(t),"--fixup",i];return await r.gitRun(e.gitRepository,n)}throw new Error("No commit chosen to fixup")}(e)},{label:"F",description:"Instant Fixup",action:e=>async function({repository:e,switches:t=[]}){const i=await c.default.chooseCommit(e,"Instantly Fixup commit");if(i){let t=p.default.shortHash(i);await r.gitRun(e.gitRepository,["commit","--no-gpg-sign","--no-edit",`--fixup=${t}`,"--"]);const n=["rebase","-i","--autosquash","--autostash",t+"~"];return await r.gitRun(e.gitRepository,n,{env:{GIT_SEQUENCE_EDITOR:"true"}})}throw new Error("No commit chosen to fixup")}(e)}]};async function w({repository:e,switches:t},i=[]){let n=null==t?void 0:t.find((({key:e})=>"-a"===e));if(0===e.indexChanges.length&&!(null==n?void 0:n.activated)&&n){if(!await c.default.confirmAction("Nothing staged. Stage and commit all unstaged changes?"))return;n.activated=!0}return C(e,["commit",...s.MenuUtil.switchesToArgs(t),...i],{showStagedChanges:!(null==n?void 0:n.activated)})}async function v({repository:e,switches:t},i=[]){return C(e,["commit",...s.MenuUtil.switchesToArgs(t),...i])}async function y({repository:e,switches:t},i=[]){return C(e,["commit",...s.MenuUtil.switchesToArgs(t),...i],{showStagedChanges:!1})}t.magitCommit=async function(e){return s.MenuUtil.showMenu(f,{repository:e,switches:[{key:"-a",name:"--all",description:"Stage all modified and deleted files"},{key:"-e",name:"--allow-empty",description:"Allow empty commit"},{key:"-s",name:"--signoff",description:"Add Signed-off-by line"},{key:"-n",name:"--no-verify",description:"Disable hooks"}]})},t.commit=w,t.ammendCommit=v,t.rewordCommit=y;let b=S();async function C(e,t,{showStagedChanges:i,updatePostCommitTask:a,editor:s,propagateErrors:u}={showStagedChanges:!0}){let g,f,w;try{f=n.window.setStatusBarMessage("Type C-c C-c to finish, or C-c C-k to cancel"),i&&(g=d.showDiffSection(e,m.Section.Staged,!0));const u={GIT_EDITOR:`"${b}" --wait`};s&&(u[s]=`"${b}" --wait`);const p=r.gitRun(e.gitRepository,t,{env:u});w=n.window.onDidChangeActiveTextEditor((e=>{if(e&&"COMMIT_EDITMSG"===l.default.fileName(e.document.uri)&&""===e.document.getText(new n.Range(0,0,0,1))){const t=e.selection.active.with(0,0),i=new n.Selection(t,t);e.selection=i}})),a&&(await new Promise((e=>setTimeout(e,100))),c.default.magitStatusAndUpdate(e));const v=await p;n.window.setStatusBarMessage(`Git finished: ${v.stdout.replace(o.LineSplitterRegex," ")}`,o.StatusMessageDisplayTimeout)}catch(e){if(n.window.setStatusBarMessage("Commit canceled.",o.StatusMessageDisplayTimeout),u||!p.default.formatError(e).includes("Aborting commit due to empty commit message."))throw e}finally{w&&w.dispose(),f&&f.dispose();const e=await g;if(e)for(const t of n.window.visibleTextEditors)if(t.document.uri===e.document.uri){const t=h.default.showDocumentColumn();await n.window.showTextDocument(e.document,{viewColumn:t,preview:!1}),await n.commands.executeCommand("workbench.action.closeActiveEditor"),n.commands.executeCommand("workbench.action.navigate"+(t===n.ViewColumn.One?"Right":"Left"))}}}function S(){let e=n.env.appName.includes("Insider"),t=n.env.appRoot.includes("codium"),i="darwin"===process.platform,o="win32"===process.platform,r=!!n.env.remoteName,s="code";return t&&!i&&(s="codium"),e&&!i&&(s+="-insiders"),o&&r&&(s+=".cmd"),s=i?a.execPath.split(/(?<=\.app)/)[0]+"/Contents/Resources/app/bin/"+s:u.join(u.dirname(a.execPath),"bin",s),g.existsSync(s)?s:"code"}t.setCodePath=function(e){b=e&&""!==e?e:S()},t.runCommitLikeCommand=C},1076:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.copyBufferRevisionCommands=void 0;const n=i(7549),o=i(5058),a=i(8650),r=i(3857);t.copyBufferRevisionCommands=async function(e,t){var i;let s;t instanceof a.default?s=null===(i=t.HEAD)||void 0===i?void 0:i.commit:t instanceof r.CommitDetailView&&(s=t.commit.hash),s&&(await n.env.clipboard.writeText(s),n.window.setStatusBarMessage(s,o.StatusMessageDisplayTimeout))}},2953:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.copySectionValueCommand=void 0;const n=i(7549),o=i(5058),a=i(8202),r=i(4997),s=i(9957),c=i(4542),d=i(1702),m=i(6713),u=i(2090);t.copySectionValueCommand=async function(e,t){var i;const l=null===(i=n.window.activeTextEditor)||void 0===i?void 0:i.selection.active;if(!l)return;let g;const h=t.click(l);h instanceof s.CommitItemView?g=h.commit.hash:h instanceof a.BranchListingView||h instanceof c.RemoteBranchListingView||h instanceof m.TagListingView?g=h.ref.commit:h instanceof d.StashItemView?g=h.section:(h instanceof u.ChangeView||h instanceof r.ChangeHeaderView)&&(g=h.change.relativePath),g&&(await n.env.clipboard.writeText(g),n.window.setStatusBarMessage(g,o.StatusMessageDisplayTimeout))}},9238:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.diffFile=t.showStashDetail=t.showDiffSection=t.diffing=void 0;const n=i(7549),o=i(2849),a=i(4707),r=i(6645),s=i(5659),c=i(8631),d=i(2977),m=i(6711),u=i(9670),l=i(5058),g=i(5923),h=i(3551),p={title:"Diffing",commands:[{label:"r",description:"Diff range",action:async function({repository:e}){var t,i;let o=await n.window.showInputBox({prompt:`Diff for range (${null===(t=e.HEAD)||void 0===t?void 0:t.name})`});if(o||(o=null===(i=e.HEAD)||void 0===i?void 0:i.name),o)return f(e,o,[o])}},{label:"p",description:"Diff paths",action:async function({repository:e}){const t=await n.window.showInputBox({prompt:"First file",value:e.uri.fsPath});if(t){const i=await n.window.showInputBox({prompt:"Second file",value:e.uri.fsPath});if(i)return f(e,"files",["--no-index",t,i])}}},{label:"u",description:"Diff unstaged",action:async function({repository:e}){return w(e,g.Section.Unstaged)}},{label:"s",description:"Diff staged",action:async function({repository:e}){return w(e,g.Section.Staged)}},{label:"w",description:"Diff worktree",action:async function({repository:e}){return f(e,"worktree",["HEAD"])}},{label:"c",description:"Show commit",action:async function({repository:e}){const t=await d.default.chooseRef(e,"Show commit",!0,!0);if(t)return u.visitCommit(e,t)}},{label:"t",description:"Show stash",action:async function({repository:e}){var t;const i=null!==(t=e.stashes.map((e=>({label:`stash@{${e.index}}`,meta:e}))))&&void 0!==t?t:[],n=await s.PickMenuUtil.showMenu(i);if(n)return v(e,n)}}]};async function f(e,t,i=[]){const n=await o.gitRun(e.gitRepository,["diff",...i]),r=a.DiffView.encodeLocation(e,t);return h.default.showView(r,new a.DiffView(r,n.stdout))}async function w(e,t,i=!1){const n=m.default.encodeLocation(e);return h.default.showView(n,new m.default(n,e,t),{preserveFocus:i})}async function v(e,t){const i=c.StashDetailView.encodeLocation(e,t),a=o.gitRun(e.gitRepository,["stash","show","-p",`stash@{${t.index}}`]);let r=[];try{let t=(await o.gitRun(e.gitRepository,["ls-tree","-r","stash@{0}^3","--name-only"])).stdout.split(l.LineSplitterRegex);t=t.slice(0,t.length-1),r=t.map((e=>({uri:n.Uri.parse(e),originalUri:n.Uri.parse(e),relativePath:e,renameUri:void 0,status:7,section:g.Section.Untracked})))}catch(e){}const s=(await a).stdout;return h.default.showView(i,new c.StashDetailView(i,t,s,r))}t.diffing=async function(e){return r.MenuUtil.showMenu(p,{repository:e})},t.showDiffSection=w,t.showStashDetail=v,t.diffFile=async function(e,t,i=!1){const n=["diff"];i&&n.push("--cached"),n.push(t.fsPath);const r=await o.gitRun(e.gitRepository,n),s=a.DiffView.encodeLocation(e,t.path);return h.default.showView(s,new a.DiffView(s,r.stdout))}},7818:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.magitDiscardAtPoint=void 0;const n=i(7549),o=i(2849),a=i(1702),r=i(2090),s=i(2481),c=i(2977),d=i(2804),m=i(5923),u=i(7849),l=i(7095),g=i(7135),h=i(6713),p=i(8202),f=i(4542),w=i(5058),v=i(3551);async function y(e,t,i){if(i instanceof s.HunkView){if(await c.default.confirmAction("Discard hunk?"))return async function(e,t,i){const n=u.default.generatePatchFromChangeHunkView(t,i,!0);return t.section===m.Section.Unstaged?l.apply(e,n,{reverse:!0}):t.section===m.Section.Staged?(await l.apply(e,n,{index:!0,reverse:!0}),l.apply(e,n,{reverse:!0})):Promise.reject()}(e,i,t)}else if(i instanceof r.ChangeView){let t=i,a=t.change;if(7===a.status){if(await c.default.confirmAction(`Trash ${a.relativePath}?`))return n.workspace.fs.delete(a.uri,{recursive:!0,useTrash:!1})}else{const i=t.section===m.Section.Staged?"staged":"unstaged";if(await c.default.confirmAction(`Discard ${i} ${a.relativePath}?`)){if(t.section===m.Section.Unstaged){const t=["checkout","--",a.uri.fsPath];return o.gitRun(e.gitRepository,t)}if(!t.change.diff)return;return await l.apply(e,t.change.diff,{index:!0,reverse:!0}),l.apply(e,t.change.diff,{index:!1,reverse:!0})}}}else if(i instanceof d.ChangeSectionView){const t=i;let a;switch(t.section){case m.Section.Untracked:if(a=t.changes.map((e=>g.default.fileName(e.uri))).join(", "),await c.default.confirmAction(`Trash ${a}?`))return n.commands.executeCommand("git.cleanAllUntracked");break;case m.Section.Unstaged:if(await c.default.confirmAction("Discard all unstaged changes?"))return n.commands.executeCommand("git.cleanAllTracked");break;case m.Section.Staged:if(await c.default.confirmAction("Discard all staged changes?")){const i=["checkout","HEAD","--",...t.changes.map((e=>e.uri.fsPath))];return o.gitRun(e.gitRepository,i)}}}else if(i instanceof a.StashSectionView){if(await c.default.confirmAction("Drop all stashes in ref/stash?")){const t=["stash","clear"];return o.gitRun(e.gitRepository,t)}}else if(i instanceof a.StashItemView){const t=i.stash;if(await c.default.confirmAction(`Drop stash stash@{${t.index}}?`)){const i=["stash","drop",`stash@{${t.index}}`];return o.gitRun(e.gitRepository,i)}}else if(i instanceof p.BranchListingView){const t=i.ref;if(t.name&&await c.default.confirmAction(`Delete branch ${t.name}?`))try{await o.gitRun(e.gitRepository,["branch","--delete",t.name])}catch(i){if("BranchNotFullyMerged"===i.gitErrorCode&&await c.default.confirmAction(`Delete unmerged branch ${t.name}?`))return o.gitRun(e.gitRepository,["branch","--delete","--force",t.name])}}else if(i instanceof f.RemoteBranchListingView){const t=i.ref;if(t.name){const[i,n]=u.default.remoteBranchFullNameToSegments(t.name);if(await c.default.confirmAction(`Delete branch ${t.name} at REMOTE ${i} (push --delete)?`))try{await o.gitRun(e.gitRepository,["push","--delete",i,n])}catch(a){if("BranchNotFullyMerged"===a.gitErrorCode&&await c.default.confirmAction(`Delete unmerged branch ${t.name}?`))return o.gitRun(e.gitRepository,["push","--delete",i,n])}}}else if(i instanceof h.TagListingView){const t=i.ref;if(await c.default.confirmAction(`Delete tag ${t.name}?`)){const i=["tag","--delete",`${t.name}`];return o.gitRun(e.gitRepository,i)}}else n.window.setStatusBarMessage("There is no thing at point that could be deleted",w.StatusMessageDisplayTimeout)}t.magitDiscardAtPoint=async function(e,t){const i=n.window.activeTextEditor.selection;return v.default.applyActionForSelection(e,t,i,[r.ChangeView,d.ChangeSectionView,p.BranchListingView,f.RemoteBranchListingView,h.TagListingView],y)}},4168:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.fetchSubmodules=t.fetching=void 0;const n=i(7549),o=i(6645),a=i(2849),r=i(5659);async function s({repository:e,switches:t}){var i;if(null===(i=e.HEAD)||void 0===i?void 0:i.pushRemote){const i=["fetch",...o.MenuUtil.switchesToArgs(t),e.HEAD.pushRemote.remote];return a.gitRun(e.gitRepository,i)}}async function c({repository:e,switches:t}){var i;if(null===(i=e.HEAD)||void 0===i?void 0:i.upstreamRemote){const i=["fetch",...o.MenuUtil.switchesToArgs(t),e.HEAD.upstreamRemote.remote];return a.gitRun(e.gitRepository,i)}}async function d({repository:e,switches:t}){const i=e.remotes.map((e=>({label:e.name,description:e.pushUrl,meta:e.name}))),n=await r.PickMenuUtil.showMenu(i);if(n){const i=["fetch",...o.MenuUtil.switchesToArgs(t),n];return a.gitRun(e.gitRepository,i)}}async function m({repository:e,switches:t}){const i=["fetch",...o.MenuUtil.switchesToArgs(t),"--all"];return a.gitRun(e.gitRepository,i)}async function u({repository:e,switches:t}){const i=await n.window.showInputBox({prompt:"Fetch from remote or url"});if(i){const r=await n.window.showInputBox({prompt:"Fetch branch"});if(r){const n=["fetch",...o.MenuUtil.switchesToArgs(t),i,`refs/heads/${r}`];return a.gitRun(e.gitRepository,n)}}}async function l({repository:e,switches:t}){const i=["fetch","--verbose","--recurse-submodules",...o.MenuUtil.switchesToArgs(t)];return a.gitRun(e.gitRepository,i)}t.fetching=async function(e){var t,i,n,a;const r=[];if(null===(t=e.HEAD)||void 0===t?void 0:t.pushRemote){const t=null===(i=e.HEAD)||void 0===i?void 0:i.pushRemote;r.push({label:"p",description:t.remote,action:s})}if(null===(n=e.HEAD)||void 0===n?void 0:n.upstream){const t=null===(a=e.HEAD)||void 0===a?void 0:a.upstream;r.push({label:"u",description:t.remote,action:c})}return r.push({label:"e",description:"elsewhere",action:d}),r.push({label:"a",description:"all remotes",action:m}),r.push({label:"o",description:"another branch",action:u}),e.submodules.length&&r.push({label:"s",description:"submodules",action:l}),o.MenuUtil.showMenu({title:"Fetching",commands:r},{repository:e,switches:[{key:"-p",name:"--prune",description:"Prune deleted branches"}]})},t.fetchSubmodules=l},7622:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.filePopup=void 0;const n=i(6645),o=i(3426),a=i(5007),r=i(3934),s=i(9238),c={title:"File Actions",commands:[{label:"s",description:"Stage",action:({repository:e,data:t})=>a.stageFile(e,t)},{label:"u",description:"Unstage",action:({repository:e,data:t})=>a.unstageFile(e,t)},{label:"c",description:"Commit",action:({repository:e})=>o.magitCommit(e)},{label:"d",description:"Diff",action:({repository:e,data:t})=>s.diffFile(e,t)},{label:"b",description:"Blame",action:({repository:e,data:t})=>r.blameFile(e,t)}]};t.filePopup=async function(e,t){return n.MenuUtil.showMenu(c,{repository:e,data:t})}},5977:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.magitDispatch=t.magitHelp=void 0;const n=i(7549),o=i(660),a=i(5622),r=i(516),s=i(3551),c=i(6771);async function d(e){let t=a.join(c.logPath,"..","..","..","..","User","keybindings.json"),i=[];try{const e=(await n.workspace.openTextDocument(t)).getText().replace(/\/\*[\s\S]*?\*\/|\/\/.*$/gm,"");i=r.parse(e)}catch(e){console.error(e)}const d=o.HelpView.encodeLocation(e);return s.default.showView(d,new o.HelpView(d,i))}t.magitHelp=async function(e){return d(e)},t.magitDispatch=async function(e){return d(e)}},3062:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ignoring=void 0;const n=i(6645),o=i(5659),a=i(7135),r=i(5747),s=i(7549),c=i(2087),d=i(5058),m={title:"Ignoring",commands:[{label:"l",description:"Ignore locally",action:({repository:e})=>u(e)},{label:"g",description:"Ignore globally (add to .gitignore)",action:({repository:e})=>u(e,!0)}]};async function u(e,t=!1){const i=[];e.untrackedFiles.forEach((e=>{const t=a.default.fileName(e.originalUri),n=a.default.fileExtension(t),o=`/*.${n}`,r=`*.${n}`;i.push({label:t,meta:t}),i.push({label:o,meta:o}),i.push({label:r,meta:r})}));const n=await o.PickMenuUtil.showMenuWithFreeform(i,"File or pattern to ignore "+(t?"globally":"locally"));if(n){let i;return i=t?e.uri.fsPath+"/.gitignore":e.uri.fsPath+"/.git/info/exclude",new Promise(((e,t)=>{r.appendFile(i,c.EOL+n,(n=>{n?t(n):(s.window.setStatusBarMessage(`Wrote file ${i}`,d.StatusMessageDisplayTimeout),e())}))}))}}t.ignoring=async function(e){return n.MenuUtil.showMenu(m,{repository:e})}},5064:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.logging=void 0;const n=i(7549),o=i(5058),a=i(6645),r=i(2849),s=i(3551),c=i(2384),d={title:"Logging",commands:[{label:"l",description:"Log current",action:l((async function(e,t,i,n){const o=p(i,n);let a=t.name?[t.name]:await h(e);a&&await g(e,o,a)}))},{label:"o",description:"Log other",action:l((async function(e,t,i,n){const o=p(i,n),a=await h(e);a&&await g(e,o,a)}))},{label:"h",description:"Log HEAD",action:l((async function(e,t,i,n){const o=p(i,n);await g(e,o,["HEAD"])}))},{label:"L",description:"Log local branches",action:l((async function(e,t,i,n){var o;const a=p(i,n),r=[null!==(o=t.name)&&void 0!==o?o:"HEAD","--branches"];await g(e,a,r)}))},{label:"b",description:"Log branches",action:l((async function(e,t,i,n){var o;const a=p(i,n),r=[null!==(o=t.name)&&void 0!==o?o:"HEAD","--branches","--remotes"];await g(e,a,r)}))},{label:"a",description:"Log references",action:l((async function(e,t,i,n){var o;const a=p(i,n),r=[null!==(o=t.name)&&void 0!==o?o:"HEAD","--all"];await g(e,a,r)}))}]},m=[{key:"-D",name:"--simplify-by-decoration",description:"Simplify by decoration"},{key:"-g",name:"--graph",description:"Show graph",activated:!0},{key:"-d",name:"--decorate",description:"Show refnames",activated:!0}],u=[{key:"=n",name:"-n",description:"Limit number of commits",value:"256",activated:!0}];function l(e){return async({repository:t,switches:i,options:n})=>{if(t.HEAD&&i&&n)return e(t,t.HEAD,i,n)}}async function g(e,t,i){const n=function(e){const t=[],i=e.match(/[^\r\n]+/g),n=new RegExp("^([/|\\-_* .o]+)?([a-f0-9]{40})( \\(([^()]+)\\))?( \\[([^\\[\\]]+)\\])( \\[([^\\[\\]]+)\\])(.*)$","g"),o=/^[/|\\-_* .o]+$/g;return null==i||i.forEach((e=>{var i,a,r;if(e.match(o))null===(a=null===(i=t[t.length-1])||void 0===i?void 0:i.graph)||void 0===a||a.push(e);else{const i=e.matchAll(n).next().value;if(i&&i.length>0){const e=i[1],n={graph:e?[e]:void 0,refs:(null!==(r=i[4])&&void 0!==r?r:"").split(", ").filter((e=>e)),author:i[6],time:new Date(1e3*Number(i[8])),commit:{hash:i[2],message:i[9],parents:[],authorEmail:void 0}};t.push(n)}}})),t}((await r.gitRun(e.gitRepository,t.concat(i),{},r.LogLevel.Error)).stdout),o=i.join(" "),a=c.default.encodeLocation(e);return s.default.showView(a,new c.default(a,{entries:n,revName:o}))}async function h(e){var t;const i=null===(t=e.HEAD)||void 0===t?void 0:t.name,a=await n.window.showInputBox({prompt:"Log rev,s:",placeHolder:i});return a&&a.length>0?a.split(/[, ]/g).filter((e=>e.length>0)):i?[i]:void n.window.setStatusBarMessage("Nothing selected",o.StatusMessageDisplayTimeout)}function p(e,t){const i=e.reduce(((e,t)=>(e[t.key]=t,e)),{}),n=["log",`--format=%H${i["-d"].activated?"%d":""} [%an] [%at]%s`,"--use-mailmap",...a.MenuUtil.optionsToArgs(t)];return i["-D"].activated&&n.push(i["-D"].name),i["-g"].activated&&n.push(i["-g"].name),n}t.logging=async function(e){return a.MenuUtil.showMenu(d,{repository:e,switches:m,options:u})}},9333:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.moveToPreviousEntity=t.moveToNextEntity=t.toggleAllFoldsInChangeSection=t.quitMagitView=t.clearSaveClose=t.saveClose=void 0;const n=i(7549),o=i(2804);async function a(){return await n.commands.executeCommand("workbench.action.files.save"),n.commands.executeCommand("workbench.action.closeActiveEditor")}t.saveClose=a,t.clearSaveClose=async function(e){return await e.edit((e=>{e.delete(new n.Range(0,0,1e3,0))})),a()},t.quitMagitView=async function(){return n.commands.executeCommand("workbench.action.closeActiveEditor")},t.toggleAllFoldsInChangeSection=async function(e,t){const i=t.click(n.window.activeTextEditor.selection.active);if(i instanceof o.ChangeSectionView){let e=i;if(e.subViews.length<2)return;let t=!e.subViews[1].folded;for(let i=1;i<e.subViews.length-1;i++)e.subViews[i].folded=t}};const r=(e,t=0)=>e.folded||t>=3?[]:e.subViews.flatMap((e=>[e,...r(e,t+1)]));function s(e){n.window.activeTextEditor.selection=new n.Selection(e,e),n.window.activeTextEditor.revealRange(new n.Selection(e,e),n.TextEditorRevealType.Default)}function c(e,t){const i=e.click(n.window.activeTextEditor.selection.active);if(i){let n=[e,...r(e)];"previous"===t&&(n=n.reverse());let o=n.indexOf(i);if(-1!==o){let e=n.slice(o+1).find((e=>e.isFoldable));if(e)return void s(e.range.start)}"next"===t?s(i.range.end.with({line:i.range.end.line})):"previous"===t&&i.range.start.line>0&&s(i.range.start.with({line:i.range.start.line-1}))}}t.moveToNextEntity=async function(e,t){c(t,"next")},t.moveToPreviousEntity=async function(e,t){c(t,"previous")}},4864:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.merging=void 0;const n=i(6645),o=i(2849),a=i(3426),r=i(2977),s={title:"Merging",commands:[{label:"m",description:"Merge",action:d},{label:"e",description:"Merge and edit message",action:e=>d(e,!1,!1,!0)},{label:"n",description:"Merge, don't commit",action:e=>d(e,!0,!1,!1)},{label:"a",description:"Absorb",action:async function({repository:e}){const t=await r.default.chooseRef(e,"Absorb");if(t)return await m(e,t),await o.gitRun(e.gitRepository,["branch","--delete",t])}},{label:"s",description:"Squash Merge",action:e=>d(e,!1,!0,!1)}]},c={title:"Merging",commands:[{label:"m",description:"Commit merge",action:async function(e){return a.commit(e)}},{label:"a",description:"Abort merge",action:async function({repository:e}){if(await r.default.confirmAction("Abort merge?")){const t=["merge","--abort"];return o.gitRun(e.gitRepository,t)}}}]};async function d({repository:e,switches:t},i=!1,n=!1,o=!1){const a=await r.default.chooseRef(e,"Merge");if(a)return m(e,a,i,n,o,t)}async function m(e,t,i=!1,r=!1,s=!1,c=[]){const d=["merge",...n.MenuUtil.switchesToArgs(c),t];return i&&d.push("--no-commit","--no-ff"),r&&d.push("--squash"),s?(d.push("--edit","--no-ff"),a.runCommitLikeCommand(e,d,{updatePostCommitTask:!0})):(d.push("--no-edit"),o.gitRun(e.gitRepository,d))}t.merging=async function(e){return e.mergingState?n.MenuUtil.showMenu(c,{repository:e}):n.MenuUtil.showMenu(s,{repository:e,switches:[{key:"-f",name:"--ff-only",description:"Fast-forward only"},{key:"-n",name:"--no-ff",description:"No fast-forward"}]})}},6724:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.processView=void 0;const n=i(3725),o=i(7549),a=i(3551);t.processView=async function(e){const t=n.default.encodeLocation(e);let i=a.default.createOrUpdateView(e,t,(()=>new n.default(t)));return a.default.showView(t,i,{selection:new o.Range(1e5,0,1e5,0)})}},4188:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.pulling=void 0;const n=i(6645),o=i(5659),a=i(2849);async function r({repository:e,switches:t}){var i;const o=null===(i=e.HEAD)||void 0===i?void 0:i.pushRemote;if(o){const i=["pull",...n.MenuUtil.switchesToArgs(t),o.remote,o.name];return a.gitRun(e.gitRepository,i)}}function s({repository:e,switches:t}){const i=["pull",...n.MenuUtil.switchesToArgs(t)];return a.gitRun(e.gitRepository,i)}async function c({repository:e,switches:t}){const i=e.remotes.flatMap((e=>e.branches.map((e=>e.name)).filter((e=>!!e)))).map((e=>({label:e,meta:e}))),r=await o.PickMenuUtil.showMenu(i,"Pull");if(r){const i=r.indexOf("/"),o=r.slice(0,i),s=r.slice(i+1),c=["pull",...n.MenuUtil.switchesToArgs(t),o,s];return a.gitRun(e.gitRepository,c)}}t.pulling=async function(e){return n.MenuUtil.showMenu(function(e){var t,i,n,o;const a=[];if(null===(t=e.HEAD)||void 0===t?void 0:t.pushRemote){const t=null===(i=e.HEAD)||void 0===i?void 0:i.pushRemote;a.push({label:"p",description:`${t.remote}/${t.name}`,action:r})}if(null===(n=e.HEAD)||void 0===n?void 0:n.upstream){const t=null===(o=e.HEAD)||void 0===o?void 0:o.upstream;a.push({label:"u",description:`${t.remote}/${t.name}`,action:s})}return a.push({label:"e",description:"elsewhere",action:c}),{title:"Pulling",commands:a}}(e),{repository:e,switches:[{key:"-r",name:"--rebase",description:"Rebase local commits"}]})}},367:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.pushing=void 0;const n=i(7549),o=i(6645),a=i(5659),r=i(7849),s=i(2849),c=i(2977),d=i(1587);async function m({repository:e,switches:t}){var i,n;const a=null===(i=e.HEAD)||void 0===i?void 0:i.pushRemote,r=null===(n=e.HEAD)||void 0===n?void 0:n.name;if((null==a?void 0:a.remote)&&r){const i=["push",...o.MenuUtil.switchesToArgs(t),a.remote,r];return s.gitRun(e.gitRepository,i)}}async function u({repository:e,...t}){var i;const n=e.remotes.map((e=>({label:e.name,description:e.pushUrl,meta:e.name}))),o=await a.PickMenuUtil.showMenu(n),r=null===(i=e.HEAD)||void 0===i?void 0:i.name;if(o&&r)return await d.default.setConfigVariable(e,`branch.${r}.pushRemote`,o),e.HEAD.pushRemote={name:r,remote:o},m({repository:e,...t})}async function l({repository:e,switches:t}){var i,n;const a=null===(i=e.HEAD)||void 0===i?void 0:i.upstreamRemote,r=null===(n=e.HEAD)||void 0===n?void 0:n.name;if((null==a?void 0:a.remote)&&r){const i=["push",...o.MenuUtil.switchesToArgs(t),a.remote,r];return s.gitRun(e.gitRepository,i)}}async function g({repository:e,...t}){var i,n;let o=[...e.refs];e.remotes.length>0&&!o.find((t=>{var i;return t.name===e.remotes[0].name+"/"+(null===(i=e.HEAD)||void 0===i?void 0:i.name)}))&&(o=[{name:`${e.remotes[0].name}/${null===(i=e.HEAD)||void 0===i?void 0:i.name}`,remote:e.remotes[0].name,type:1},...o]);const s=o.filter((t=>{var i;return 2!==t.type&&t.name!==(null===(i=e.HEAD)||void 0===i?void 0:i.name)})).sort(((e,t)=>t.type-e.type)).map((e=>({label:e.name,description:r.default.shortHash(e.commit),meta:e.name})));let c;try{c=await a.PickMenuUtil.showMenu(s)}catch(e){}const m=null===(n=e.HEAD)||void 0===n?void 0:n.name;if(c&&m){const[i,n]=r.default.remoteBranchFullNameToSegments(c);if(i&&n)return await Promise.all([d.default.setConfigVariable(e,`branch.${m}.merge`,`refs/heads/${n}`),d.default.setConfigVariable(e,`branch.${m}.remote`,i)]),e.HEAD.upstreamRemote={name:n,remote:i},l({repository:e,...t})}}async function h(){return n.commands.executeCommand("git.pushTo")}async function p({repository:e,switches:t}){const i=await c.default.chooseRef(e,"Push",!1,!1,!0),n=await c.default.chooseRef(e,`Push ${i} to`,!1,!1,!0,!0),[a,...r]=n.split("/"),d=r.join("/");if(n&&i){const n=["push",...o.MenuUtil.switchesToArgs(t),a,`${i}:${d}`];return s.gitRun(e.gitRepository,n)}}async function f({repository:e,switches:t}){var i,n,a,r,d;const m=null!==(a=null===(n=null===(i=e.HEAD)||void 0===i?void 0:i.upstreamRemote)||void 0===n?void 0:n.remote)&&void 0!==a?a:null===(d=null===(r=e.HEAD)||void 0===r?void 0:r.pushRemote)||void 0===d?void 0:d.remote,u=await c.default.chooseTag(e,"Push tag");if(m&&u){const i=["push",...o.MenuUtil.switchesToArgs(t),m,u];return s.gitRun(e.gitRepository,i)}}async function w({repository:e,switches:t}){var i,n,a,r,c;const d=null!==(a=null===(n=null===(i=e.HEAD)||void 0===i?void 0:i.upstreamRemote)||void 0===n?void 0:n.remote)&&void 0!==a?a:null===(c=null===(r=e.HEAD)||void 0===r?void 0:r.pushRemote)||void 0===c?void 0:c.remote;if(d){const i=["push",...o.MenuUtil.switchesToArgs(t),d,"--tags"];return s.gitRun(e.gitRepository,i)}}t.pushing=async function(e){return o.MenuUtil.showMenu(function(e){var t,i,n,o;const a=[];if(null===(t=e.HEAD)||void 0===t?void 0:t.pushRemote){const t=null===(i=e.HEAD)||void 0===i?void 0:i.pushRemote;a.push({label:"p",description:`${t.remote}/${t.name}`,action:m})}else a.push({label:"p",description:"pushRemote, after setting that",action:u});if(null===(n=e.HEAD)||void 0===n?void 0:n.upstream){const t=null===(o=e.HEAD)||void 0===o?void 0:o.upstream;a.push({label:"u",description:`${t.remote}/${t.name}`,action:l})}else a.push({label:"u",description:"@{upstream}, after setting that",action:g});return a.push({label:"e",description:"elsewhere",action:h}),a.push({label:"o",description:"another branch/commit",action:p}),a.push({label:"T",description:"a tag",action:f}),a.push({label:"t",description:"all tags",action:w}),{title:"Pushing",commands:a}}(e),{repository:e,switches:[{key:"-f",name:"--force-with-lease",description:"Force with lease"},{key:"-F",name:"--force",description:"Force"},{key:"-h",name:"--no-verify",description:"Disable hooks"},{key:"-d",name:"--dry-run",description:"Dry run"}]})}},7021:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.rebasing=void 0;const n=i(6645),o=i(2849),a=i(2977),r=i(7217),s=i(3426),c={title:"Rebasing",commands:[{label:"r",description:"Continue",action:e=>async function({repository:e}){return s.runCommitLikeCommand(e,["rebase","--continue"],{editor:"GIT_SEQUENCE_EDITOR"})}(e)},{label:"s",description:"Skip",action:e=>u(e,"--skip")},{label:"e",description:"Edit",action:async function({repository:e}){return s.runCommitLikeCommand(e,["rebase","--edit-todo"],{editor:"GIT_SEQUENCE_EDITOR",propagateErrors:!0})}},{label:"a",description:"Abort",action:e=>u(e,"--abort")}]};async function d({repository:e,switches:t}){const i=await a.default.chooseRef(e,"Rebase");if(i)return m(e,i,t)}async function m(e,t,i=[]){const a=["rebase",...n.MenuUtil.switchesToArgs(i),t];try{return i.find((e=>e.activated&&"--interactive"===e.name))?s.runCommitLikeCommand(e,a,{editor:"GIT_SEQUENCE_EDITOR"}):await o.gitRun(e.gitRepository,a)}catch(e){throw new r.MagitError("Failed to merge in the changes.",e)}}async function u({repository:e},t){const i=["rebase",t];return o.gitRun(e.gitRepository,i)}async function l({repository:e,switches:t}){const i=await a.default.chooseCommit(e,"Rebase commit and all above it");if(i){const o=(null!=t?t:[]).map((e=>({...e,activated:e.activated||"--interactive"===e.name}))),a=["rebase",...n.MenuUtil.switchesToArgs(o),`${i}^`];return s.runCommitLikeCommand(e,a,{editor:"GIT_SEQUENCE_EDITOR"})}}t.rebasing=async function(e){if(e.rebasingState)return n.MenuUtil.showMenu(c,{repository:e});{const t=[{key:"-k",name:"--keep-empty",description:"Keep empty commits"},{key:"-p",name:"--preserve-merges",description:"Preserve merges"},{key:"-c",name:"--committer-date-is-author-date",description:"Lie about committer date"},{key:"-a",name:"--autosquash",description:"Autosquash"},{key:"-A",name:"--autostash",description:"Autostash"},{key:"-i",name:"--interactive",description:"Interactive"},{key:"-h",name:"--no-verify",description:"Disable hooks"}],i=e.HEAD,o=[];(null==i?void 0:i.pushRemote)&&o.push({label:"p",description:`onto ${i.pushRemote.remote}/${i.pushRemote.name}`,action:({switches:t})=>m(e,`${i.pushRemote.remote}/${i.pushRemote.name}`,t)}),(null==i?void 0:i.upstreamRemote)&&o.push({label:"u",description:`onto ${i.upstreamRemote.remote}/${i.upstreamRemote.name}`,action:({switches:t})=>m(e,`${i.upstreamRemote.remote}/${i.upstreamRemote.name}`,t)}),o.push({label:"e",description:"onto elsewhere",action:d},{label:"i",description:"interactively",action:l});const a={title:`Rebasing ${null==i?void 0:i.name}`,commands:o};return n.MenuUtil.showMenu(a,{repository:e,switches:t})}}},5260:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.remoting=void 0;const n=i(6645),o=i(7549),a=i(2849),r={title:"Remoting",commands:[{label:"a",description:"Add",action:async function(){return o.commands.executeCommand("git.addRemote")}},{label:"r",description:"Rename",action:async function({repository:e}){const t=await o.window.showQuickPick(e.remotes.map((e=>e.name)),{placeHolder:"Rename remote"});if(t){const i=await o.window.showInputBox({prompt:`Rename ${t} to`});if(i){const n=["remote","rename",t,i];a.gitRun(e.gitRepository,n)}}}},{label:"k",description:"Remove",action:async function(){return o.commands.executeCommand("git.removeRemote")}}]};t.remoting=async function(e){return n.MenuUtil.showMenu(r,{repository:e})}},269:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.resetHard=t.resetMixed=t.resetting=void 0;const n=i(6645),o=i(2849),a=i(2977),r=i(7549),s={title:"Resetting",commands:[{label:"m",description:"reset mixed (HEAD and index)",action:({repository:e})=>c(e)},{label:"s",description:"reset soft (HEAD only)",action:({repository:e})=>{var t;return m(e,["--soft"],`Soft reset ${null===(t=e.HEAD)||void 0===t?void 0:t.name} to`)}},{label:"h",description:"reset hard (HEAD, index and files)",action:({repository:e})=>d(e)},{label:"i",description:"reset index (only)",action:({repository:e})=>m(e,[],"Reset index to")},{label:"w",description:"reset worktree (only)",action:async function({repository:e}){var t;if(await r.window.showQuickPick([`${null===(t=e.HEAD)||void 0===t?void 0:t.name}`,"HEAD"],{placeHolder:"Reset worktree to"})){const t=["checkout-index","--all","--force"];return await o.gitRun(e.gitRepository,t)}}}]};async function c(e){var t;return m(e,["--mixed"],`Reset ${null===(t=e.HEAD)||void 0===t?void 0:t.name} to`)}async function d(e){var t;return m(e,["--hard"],`Hard reset ${null===(t=e.HEAD)||void 0===t?void 0:t.name} to`)}async function m(e,t,i){const n=await a.default.chooseRef(e,i,!0,!0);if(n){const i=["reset",...t,n];return await o.gitRun(e.gitRepository,i)}}t.resetting=async function(e){return n.MenuUtil.showMenu(s,{repository:e})},t.resetMixed=c,t.resetHard=d},3419:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.reverseAtPoint=void 0;const n=i(7549),o=i(9957),a=i(1702),r=i(8202),s=i(4542),c=i(6713),d=i(9553),m=i(2977);t.reverseAtPoint=async function(e,t){const i=t.click(n.window.activeTextEditor.selection.active);if(i instanceof o.CommitItemView){const t=i.commit;return d.revert(e,t.hash,{noCommit:!0})}if(i instanceof r.BranchListingView||i instanceof s.RemoteBranchListingView||i instanceof c.TagListingView){const t=i.ref;if(t.commit)return d.revert(e,t.commit,{noCommit:!0})}else if(i instanceof a.StashItemView);else{const t=await m.default.chooseRef(e,"Revert changes",!0,!0);if(t)return d.revert(e,t,{noCommit:!0})}}},9553:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.revert=t.reverting=void 0;const n=i(2849),o=i(6645),a=i(2977),r=i(3426),s={title:"Reverting",commands:[{label:"V",description:"Continue",action:async function({repository:e}){return r.runCommitLikeCommand(e,["revert","--continue"])}},{label:"s",description:"Skip",action:e=>m(e,"--skip")},{label:"a",description:"Abort",action:e=>m(e,"--abort")}]},c={title:"Reverting",commands:[{label:"V",description:"Revert commit(s)",action:async function({repository:e,switches:t}){const i=await a.default.chooseRef(e,"Revert commit(s)",!0,!0);if(i)return d(e,i,{edit:!!(null==t?void 0:t.find((e=>"-e"===e.key&&e.activated)))})}},{label:"v",description:"Revert changes",action:async function({repository:e}){const t=await a.default.chooseRef(e,"Revert changes",!0,!0);if(t)return d(e,t,{noCommit:!0})}}]};async function d(e,t,{noCommit:i,edit:o}={}){const a=["revert"];return i&&a.push("--no-commit"),o?(a.push("--edit"),a.push(t),r.runCommitLikeCommand(e,a,{updatePostCommitTask:!0})):(a.push("--no-edit"),a.push(t),n.gitRun(e.gitRepository,a))}async function m({repository:e},t){const i=["revert",t];return n.gitRun(e.gitRepository,i)}t.reverting=async function(e){if(e.revertingState)return o.MenuUtil.showMenu(s,{repository:e});{const t=[{key:"-e",name:"--edit",description:"Edit commit message",activated:!0},{key:"-E",name:"--no-edit",description:"Don't edit commit message"}];return o.MenuUtil.showMenu(c,{repository:e,switches:t})}},t.revert=d},7042:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.running=void 0;const n=i(6645),o=i(7549),a=i(2849),r=i(6724),s={title:"Running",commands:[{label:"!",description:"Git subcommand (in topdir)",action:({repository:e})=>c(e)},{label:"p",description:"Git subcommand (in pwd)",action:({repository:e})=>{var t;return c(e,null===(t=o.workspace.getWorkspaceFolder(e.uri))||void 0===t?void 0:t.uri)}}]};async function c(e,t){const i=await o.window.showInputBox({value:"git "});let n={};if(t&&(n.cwd=t.fsPath),i){const t=i.replace("git ","").split(" ");return await a.gitRun(e.gitRepository,t,n,a.LogLevel.Detailed),void await r.processView(e)}}t.running=async function(e){return n.MenuUtil.showMenu(s,{repository:e})}},5007:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.unstageFile=t.stageFile=t.magitUnstageAll=t.magitUnstage=t.magitStageAll=t.magitStage=void 0;const n=i(7549),o=i(2481),a=i(2090),r=i(2977),s=i(7135),c=i(2804),d=i(5923),m=i(2849),u=i(5659),l=i(7095),g=i(7849),h=i(5058),p=i(3551);async function f(e,t,i){if(i instanceof o.HunkView){if(i.section!==d.Section.Staged){const n=g.default.generatePatchFromChangeHunkView(i,t);return l.apply(e,n,{index:!0})}n.window.setStatusBarMessage("Already staged",h.StatusMessageDisplayTimeout)}else{if(i instanceof a.ChangeView){let t=i,n=t.change;return b(e,n.uri,t.section===d.Section.Unstaged)}if(i instanceof c.ChangeSectionView)switch(i.section){case d.Section.Untracked:return async function(e){return m.gitRun(e.gitRepository,["add",...e.untrackedFiles.map((e=>{var t;return null!==(t=e.relativePath)&&void 0!==t?t:""}))])}(e);case d.Section.Unstaged:return w(e)}else if(e.workingTreeChanges.length||e.untrackedFiles.length){const t=[...e.workingTreeChanges,...e.untrackedFiles].map((t=>({label:s.default.uriPathRelativeTo(t.uri,e.uri),meta:t.uri}))),i=await u.PickMenuUtil.showMenu(t,"Stage file");if(i)return b(e,i)}}}async function w(e){return m.gitRun(e.gitRepository,["add","-u"])}async function v(e,t,i){if(i instanceof o.HunkView){if(i.section===d.Section.Staged){const n=g.default.generatePatchFromChangeHunkView(i,t,!0);return l.apply(e,n,{index:!0,reverse:!0})}n.window.setStatusBarMessage("Already unstaged",h.StatusMessageDisplayTimeout)}else{if(i instanceof a.ChangeView)return C(e,i.change.uri);if(i instanceof c.ChangeSectionView){if(i.section===d.Section.Staged)return y(e);n.window.setStatusBarMessage("Already unstaged",h.StatusMessageDisplayTimeout)}else{const t=e.indexChanges.map((t=>({label:s.default.uriPathRelativeTo(t.uri,e.uri),meta:t.uri}))),i=await u.PickMenuUtil.showMenu(t,"Unstage file");if(i)return C(e,i)}}}async function y(e){return m.gitRun(e.gitRepository,["reset"])}async function b(e,t,i=!1){let n=["add"];return i?n.push("-u"):n.push("-A"),n.push("--",t.fsPath),m.gitRun(e.gitRepository,n)}async function C(e,t){const i=["reset","--",t.fsPath];return m.gitRun(e.gitRepository,i)}t.magitStage=async function(e,t){const i=n.window.activeTextEditor.selection;return p.default.applyActionForSelection(e,t,i,[c.ChangeSectionView,a.ChangeView],f)},t.magitStageAll=async function(e){return w(e)},t.magitUnstage=async function(e,t){const i=n.window.activeTextEditor.selection;return p.default.applyActionForSelection(e,t,i,[c.ChangeSectionView,a.ChangeView],v)},t.magitUnstageAll=async function(e){if(await r.default.confirmAction("Unstage all changes?"))return y(e)},t.stageFile=b,t.unstageFile=C},7502:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.stashing=void 0;const n=i(6645),o=i(7549),a=i(2849),r=i(7849),s={title:"Stashing",commands:[{label:"z",description:"Save",action:c},{label:"p",description:"Pop",action:async function(){return o.commands.executeCommand("git.stashPop")}},{label:"a",description:"Apply",action:async function(){return o.commands.executeCommand("git.stashApply")}},{label:"k",description:"Drop",action:async function(){return o.commands.executeCommand("git.stashDrop")}},{label:"i",description:"Save index",action:async function({repository:e,switches:t}){var i,n;if(null===(i=e.HEAD)||void 0===i?void 0:i.commit){const i=await m(e);if(void 0!==i){const o=["commit","--message","intermediary stash commit"],r=["stash","push","--message","intermediary stash"],s=["reset","--soft",null===(n=e.HEAD)||void 0===n?void 0:n.commit],c=["stash","pop","--index","stash@{1}"];try{try{await a.gitRun(e.gitRepository,o),await a.gitRun(e.gitRepository,r),await a.gitRun(e.gitRepository,s)}catch(e){}return await d({repository:e,switches:t},i),a.gitRun(e.gitRepository,c)}catch(t){throw await a.gitRun(e.gitRepository,c),t}}}}},{label:"w",description:"Save worktree",action:async function({repository:e,switches:t}){var i,n;if(null===(i=e.HEAD)||void 0===i?void 0:i.commit){const i=await m(e);if(void 0!==i){const o=["commit","--message","intermediary stash commit"],r=["reset","--soft",null===(n=e.HEAD)||void 0===n?void 0:n.commit];try{try{await a.gitRun(e.gitRepository,o)}catch(e){}return await d({repository:e,switches:t},i),a.gitRun(e.gitRepository,r)}catch(t){throw await a.gitRun(e.gitRepository,r),t}}}}},{label:"x",description:"Save keeping index",action:e=>c(e,["--keep-index"])}]};async function c({repository:e,switches:t},i=[]){const n=await m(e);if(void 0!==n)return d({repository:e,switches:t},n,i)}async function d({repository:e,switches:t},i,o=[]){const r=["stash","push",...n.MenuUtil.switchesToArgs(t),...o];if(void 0!==i)return""!==i&&(r.push("--message"),r.push(i)),a.gitRun(e.gitRepository,r)}function m(e){var t,i,n;const a=`On ${null!==(i=null===(t=e.HEAD)||void 0===t?void 0:t.name)&&void 0!==i?i:r.default.shortHash(null===(n=e.HEAD)||void 0===n?void 0:n.commit)}: `;return o.window.showInputBox({prompt:`Stash message: ${a}`})}t.stashing=async function(e){return n.MenuUtil.showMenu(s,{repository:e,switches:[{key:"-u",name:"--include-untracked",description:"Also save untracked files"},{key:"-a",name:"--all",description:"Also save untracked files and ignored files"}]})}},7707:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.internalMagitStatus=t.magitStatus=t.magitRefresh=void 0;const n=i(7549),o=i(6771),a=i(7135),r=i(7849),s=i(2977),c=i(8650),d=i(2849),m=i(5058),u=i(561),l=i(3551),g=i(4063);async function h(e){var t,i,o,s,c,l,h;await e.status();const f=e.rootUri+"/.git/",w=async function(e){let t=["stash","list"];try{let i=(await d.gitRun(e,t,{},d.LogLevel.None)).stdout;return 0===i.length?[]:i.replace(m.FinalLineBreakRegex,"").split(m.LineSplitterRegex).map(((e,t)=>({index:t,description:e.replace(/stash@{\d+}: /g,"")})))}catch(e){return[]}}(e),v=(null===(t=e.state.HEAD)||void 0===t?void 0:t.commit)?e.log({maxEntries:100}):Promise.resolve([]);(null===(i=e.state.HEAD)||void 0===i?void 0:i.commit)&&u.getCommit(e,null===(o=e.state.HEAD)||void 0===o?void 0:o.commit);let y=[],b=[];if((null===(s=e.state.HEAD)||void 0===s?void 0:s.ahead)||(null===(c=e.state.HEAD)||void 0===c?void 0:c.behind)){const t=e.state.HEAD.name,i=["rev-list","--left-right",`${t}...${t}@{u}`],n=(await d.gitRun(e,i,{},d.LogLevel.None)).stdout;[y,b]=r.default.parseRevListLeftRight(n),y.map((t=>u.getCommit(e,t))),b.map((t=>u.getCommit(e,t)))}const C=e.state.workingTreeChanges.filter((e=>7!==e.status)),S=e.state.workingTreeChanges.length>C.length?(await d.gitRun(e,["ls-files","--others","--exclude-standard","--directory","--no-empty-directory"],{},d.LogLevel.None)).stdout.replace(m.FinalLineBreakRegex,"").split(m.LineSplitterRegex).map((t=>{const i=n.Uri.parse(e.rootUri.path+"/"+t);return{originalUri:i,renameUri:i,uri:i,status:7,relativePath:a.default.uriPathRelativeTo(i,e.rootUri)}})):[],k=Promise.all(C.map((async t=>{const i=await e.diffWithHEAD(t.uri.fsPath);return p(e,t,i)}))),R=Promise.all(e.state.indexChanges.map((async t=>{const i=await e.diffIndexWithHEAD(t.uri.fsPath);return p(e,t,i)}))),x=Promise.all(e.state.mergeChanges.map((async t=>{const i=await e.diffWithHEAD(t.uri.fsPath);return p(e,t,i)}))),T=n.Uri.parse(f+"sequencer/todo"),P=n.Uri.parse(f+"sequencer/head"),M=async function(e,t){const i=n.Uri.parse(t+"MERGE_HEAD"),o=n.Uri.parse(t+"MERGE_MSG"),a=n.workspace.fs.readFile(i).then((e=>e.toString()),(e=>{})),s=n.workspace.fs.readFile(o).then((e=>e.toString()),(e=>{}));try{const t=await a,i=await s;if(t&&i){const n=r.default.parseMergeStatus(t,i);if(n){const[t,i]=n,o=(await d.gitRun(e,["rev-list",`HEAD..${t}`],{},d.LogLevel.None)).stdout.replace(m.FinalLineBreakRegex,"").split(m.LineSplitterRegex);return{mergingBranches:i,commits:await Promise.all(o.map((t=>u.getCommit(e,t))))}}}}catch(e){}}(e,f),V=async function(e,t,i){var o,a;try{if(e.state.rebaseCommit){let s,c=!1;const d=n.Uri.parse(t+"rebase-apply/"),l=n.Uri.parse(t+"rebase-merge/");await n.workspace.fs.readDirectory(d).then((e=>e.length),(e=>{}))?s=d:(c=!0,s=l);const g=n.Uri.parse(s+"head-name"),h=n.Uri.parse(s+"onto"),p=n.workspace.fs.readFile(g).then((e=>e.toString().replace(m.FinalLineBreakRegex,""))),f=n.workspace.fs.readFile(h).then((e=>e.toString().replace(m.FinalLineBreakRegex,"")));let w,v;if(c)w=await n.workspace.fs.readFile(n.Uri.parse(t+"rebase-merge/msgnum")).then((e=>e.toString().replace(m.FinalLineBreakRegex,""))).then(Number.parseInt),v=n.workspace.fs.readFile(n.Uri.parse(t+"rebase-merge/git-rebase-todo")).then((e=>e.toString().replace(m.FinalLineBreakRegex,"")),(e=>{})).then(r.default.parseSequencerTodo).then((e=>e.reverse()));else{const e=n.workspace.fs.readFile(n.Uri.parse(t+"rebase-apply/last")).then((e=>e.toString().replace(m.FinalLineBreakRegex,""))).then(Number.parseInt);w=await n.workspace.fs.readFile(n.Uri.parse(t+"rebase-apply/next")).then((e=>e.toString().replace(m.FinalLineBreakRegex,""))).then(Number.parseInt);const i=[];for(let t=await e;t>w;t--)i.push(t);v=Promise.all(i.map((e=>n.workspace.fs.readFile(n.Uri.parse(t+"rebase-apply/"+e.toString().padStart(4,"0"))).then((e=>e.toString().replace(m.FinalLineBreakRegex,""))).then(r.default.commitDetailTextToCommit))))}let y=await u.getCommit(e,await f),b=e.state.refs.find((e=>e.commit===y.hash&&1!==e.type)),C={name:null!==(o=null==b?void 0:b.name)&&void 0!==o?o:r.default.shortHash(y.hash),commitDetails:y};const S=(await i).slice(0,w-1),k=null!==(a=await v)&&void 0!==a?a:[];return{currentCommit:e.state.rebaseCommit,origBranchName:(await p).split("/")[2],onto:C,doneCommits:S,upcomingCommits:k}}}catch(e){}}(e,f,v),A=async function(e,t,i,o){try{const a=n.Uri.parse(t+"CHERRY_PICK_HEAD"),s=await n.workspace.fs.readFile(a).then((e=>e.toString().replace(m.FinalLineBreakRegex,"")),(e=>{}));if(s){const t=n.workspace.fs.readFile(i).then((e=>e.toString().replace(m.FinalLineBreakRegex,"")),(e=>{})),a=n.workspace.fs.readFile(o).then((e=>e.toString().replace(m.FinalLineBreakRegex,"")),(e=>{})),c=await t,d=await a,l=u.getCommit(e,s),g=d?u.getCommit(e,d):u.getCommit(e,e.state.HEAD.commit);return{originalHead:await g,currentCommit:await l,upcomingCommits:r.default.parseSequencerTodo(c).slice(1).reverse()}}}catch(e){}}(e,f,T,P),E=async function(e,t,i,o){try{const a=n.Uri.parse(t+"REVERT_HEAD"),s=await n.workspace.fs.readFile(a).then((e=>e.toString().replace(m.FinalLineBreakRegex,"")),(e=>{}));if(s){const t=n.workspace.fs.readFile(i).then((e=>e.toString().replace(m.FinalLineBreakRegex,"")),(e=>{})),a=n.workspace.fs.readFile(o).then((e=>e.toString().replace(m.FinalLineBreakRegex,"")),(e=>{})),c=await t,d=await a,l=u.getCommit(e,s),g=d?u.getCommit(e,d):u.getCommit(e,e.state.HEAD.commit);return{originalHead:await g,currentCommit:await l,upcomingCommits:r.default.parseSequencerTodo(c).slice(1).reverse()}}}catch(e){}}(e,f,T,P),D=e.state.HEAD;if(null==D?void 0:D.commit){D.commitDetails=await u.getCommit(e,D.commit),D.tag=e.state.refs.find((e=>(null==D?void 0:D.commit)===e.commit&&2===e.type));try{if(null===(l=D.upstream)||void 0===l?void 0:l.remote){const t=D.upstream.remote,i=null===(h=e.state.refs.find((e=>{var i;return e.remote===t&&e.name===`${t}/${null===(i=D.upstream)||void 0===i?void 0:i.name}`})))||void 0===h?void 0:h.commit,n=i?u.getCommit(e,i):void 0,o=e.getConfig(`branch.${D.upstream.name}.rebase`);D.upstreamRemote=D.upstream,D.upstreamRemote.commit=await n,D.upstreamRemote.commitsAhead=await Promise.all(y.map((t=>u.getCommit(e,t)))),D.upstreamRemote.commitsBehind=await Promise.all(b.map((t=>u.getCommit(e,t)))),D.upstreamRemote.rebase="true"===await o}}catch(e){}D.pushRemote=await async function(e){var t;try{const i=e.state.HEAD,n=await e.getConfig(`branch.${i.name}.pushRemote`);if((null==i?void 0:i.name)&&n){const o=["rev-list","--left-right",`${i.name}...${n}/${i.name}`],a=(await d.gitRun(e,o,{},d.LogLevel.None)).stdout,[s,c]=r.default.parseRevListLeftRight(a),m=await Promise.all(s.map((t=>u.getCommit(e,t)))),l=await Promise.all(c.map((t=>u.getCommit(e,t)))),g=null===(t=e.state.refs.find((e=>e.remote===n&&e.name===`${n}/${i.name}`)))||void 0===t?void 0:t.commit,h=g?u.getCommit(e,g):Promise.resolve(void 0);return{remote:n,name:i.name,commit:await h,commitsAhead:m,commitsBehind:l}}}catch(e){}}(e)}const $=e.state.refs.filter((e=>1===e.type)),U=e.state.remotes.map((e=>({...e,branches:$.filter((t=>t.remote===e.name&&t.name!==e.name+"/HEAD"))})));let I=g.forgeStatus(U);return{uri:e.rootUri,HEAD:D,stashes:await w,log:await v,workingTreeChanges:await k,indexChanges:await R,mergeChanges:await x,untrackedFiles:S,rebasingState:await V,mergingState:await M,cherryPickingState:await A,revertingState:await E,branches:e.state.refs.filter((e=>0===e.type)),remotes:U,tags:e.state.refs.filter((e=>2===e.type)),refs:e.state.refs,submodules:e.state.submodules,gitRepository:e,forgeState:await I}}function p(e,t,i){const n=t;return n.relativePath=a.default.uriPathRelativeTo(t.uri,e.rootUri),n.diff=i,n.hunks=i?r.default.diffToHunks(i,t.uri):void 0,n}t.magitRefresh=async function(){},t.magitStatus=async function(){const e=n.window.activeTextEditor;let t=s.default.getCurrentMagitRepoNO_STATUS(null==e?void 0:e.document.uri);if(t){const i=c.default.encodeLocation(t);let a=o.views.get(i.toString());if(a){if(await s.default.magitStatusAndUpdate(t),(null==e?void 0:e.document.uri.path)===c.default.UriPath)return;return n.workspace.openTextDocument(a.uri).then((e=>n.window.showTextDocument(e,{viewColumn:l.default.showDocumentColumn(),preview:!1})))}t=await h(t.gitRepository),o.magitRepositories.set(t.uri.fsPath,t)}else t=await s.default.getCurrentMagitRepo(null==e?void 0:e.document.uri);if(t){const e=c.default.encodeLocation(t);return l.default.showView(e,l.default.createOrUpdateView(t,e,(()=>new c.default(e,t))))}},t.internalMagitStatus=h},4102:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.submodules=void 0;const n=i(6645),o=i(2849),a=i(7549),r=i(4168),s=i(2703),c=i(3551),d={title:"Submodules",commands:[{label:"a",description:"Add",action:async function({repository:e,switches:t}){const i=await a.window.showInputBox({prompt:"Add submodule (remote url)"});if(i){const a=["submodule","add",...n.MenuUtil.switchesToArgs(t),i];return await o.gitRun(e.gitRepository,a)}}},{label:"r",description:"Register",action:async function({repository:e,switches:t}){const i=await m(e,"Populate module");if(i){const a=["submodule","init",...n.MenuUtil.switchesToArgs(t),"--",i];return await o.gitRun(e.gitRepository,a)}}},{label:"p",description:"Populate",action:async function({repository:e,switches:t}){const i=await m(e,"Populate module");if(i){const a=["submodule","update","--init",...n.MenuUtil.switchesToArgs(t),"--",i];return await o.gitRun(e.gitRepository,a)}}},{label:"u",description:"Update",action:async function({repository:e,switches:t}){const i=await m(e,"Update module");if(i){const a=["submodule","update",...n.MenuUtil.switchesToArgs(t),"--",i];return await o.gitRun(e.gitRepository,a)}}},{label:"s",description:"Synchronize",action:async function({repository:e,switches:t}){const i=await m(e,"Synchronize module");if(i){const a=["submodule","sync",...n.MenuUtil.switchesToArgs(t),"--",i];return await o.gitRun(e.gitRepository,a)}}},{label:"d",description:"Unpopulate",action:async function({repository:e,switches:t}){const i=await m(e,"Unpopulate module");if(i){const a=["submodule","deinit",...n.MenuUtil.switchesToArgs(t),"--",i];return await o.gitRun(e.gitRepository,a)}}},{label:"k",description:"Remove",action:async function({repository:e,switches:t}){const i=await m(e,"Remove module");if(i){const t=["submodule","absorbgitdirs","--",i],n=["submodule","deinit","--",i],a=["rm","--",i];return await o.gitRun(e.gitRepository,t),await o.gitRun(e.gitRepository,n),await o.gitRun(e.gitRepository,a)}}},{label:"l",description:"List all modules",action:async function({repository:e,switches:t}){const i=s.default.encodeLocation(e);let n=c.default.createOrUpdateView(e,i,(()=>new s.default(i,e)));return c.default.showView(i,n)}},{label:"f",description:"Fetch all modules",action:function({repository:e,switches:t}){return r.fetchSubmodules({repository:e,switches:t})}}]};async function m(e,t){return await a.window.showQuickPick(e.submodules.map((e=>e.name)),{placeHolder:t})}t.submodules=async function(e){return n.MenuUtil.showMenu(d,{repository:e,switches:[{key:"-f",name:"--force",description:"Force"},{key:"-r",name:"--recursive",description:"Recursive"},{key:"-N",name:"--no-fetch",description:"Do not fetch"},{key:"-C",name:"--checkout",description:"Checkout tip"},{key:"-R",name:"--rebase",description:"Rebase onto tip"},{key:"-M",name:"--merge",description:"Merge tip"},{key:"-U",name:"--remote",description:"Use upstream tip"}]})}},2523:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tagging=void 0;const n=i(6645),o=i(2849),a=i(2977),r=i(7549),s=i(3426),c={title:"Tagging",commands:[{label:"t",description:"Create",action:async function({repository:e,switches:t}){const i=await r.window.showInputBox({prompt:"Tag name"});if(i){const r=await a.default.chooseRef(e,"Place tag on",!0,!0);if(r){const a=["tag",...n.MenuUtil.switchesToArgs(t),i,r];return(null==t?void 0:t.find((({key:e,activated:t})=>"-a"===e&&t)))?s.runCommitLikeCommand(e,a,{updatePostCommitTask:!0}):await o.gitRun(e.gitRepository,a)}}}},{label:"k",description:"Delete",action:async function({repository:e,switches:t}){const i=await a.default.chooseTag(e,"Delete tag");if(i){const a=["tag","-d",...n.MenuUtil.switchesToArgs(t),i];return await o.gitRun(e.gitRepository,a)}}}]};t.tagging=async function(e){return n.MenuUtil.showMenu(c,{repository:e,switches:[{key:"-a",name:"--annotate",description:"Annotate"},{key:"-f",name:"--force",description:"Force"}]})}},9670:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.visitCommit=t.magitVisitAtPoint=void 0;const n=i(7549),o=i(9957),a=i(2849),r=i(3857),s=i(1702),c=i(2090),d=i(2481),m=i(8202),u=i(4542),l=i(6713),g=i(9238),h=i(5058),p=i(3551),f=i(6925),w=i(9416),v=i(4004),y=i(4386),b=i(5622);async function C(e,t){const i=e.changeHunk,o=await n.workspace.openTextDocument(i.uri),a=await n.window.showTextDocument(o,{viewColumn:p.default.showDocumentColumn(),preview:!1});try{const o=i.diff.match(/(?<=\+)\d+(?=,)/g);if(null==o?void 0:o.length){const r=Number.parseInt(o[0].toString())-1;let s=0,c=0;if(t&&t.line>e.range.start.line)s=t.line-(e.range.start.line+1),c=t.character>0?t.character-1:t.character;else{const e=i.diff.split(/^\+/gm);if(e.length>1)s=e[0].split(h.LineSplitterRegex).length-2;else{const e=i.diff.split(/^-/gm);e.length&&(s=e[0].split(h.LineSplitterRegex).length-2)}c=0}const d=i.diff.split(h.LineSplitterRegex).slice(0,s+1).filter((e=>"-"===e.charAt(0))).length,m=new n.Position(r+s-d,c);let u=new n.Selection(m,m);a.revealRange(new n.Range(m,m),n.TextEditorRevealType.InCenterIfOutsideViewport),a.selection=u}}catch(e){}}async function S(e,t){const i=await a.gitRun(e.gitRepository,["show",t]),n={hash:t,message:"",parents:[]},o=r.CommitDetailView.encodeLocation(e,n.hash);return p.default.showView(o,new r.CommitDetailView(o,n,i.stdout))}t.magitVisitAtPoint=async function(e,t){var i,a,r;const k=null===(i=n.window.activeTextEditor)||void 0===i?void 0:i.selection.active;if(!k)return;const R=t.click(k);if(R instanceof c.ChangeView){const e=R.change;return(null===(a=e.hunks)||void 0===a?void 0:a.length)?C(R.subViews.find((e=>e instanceof d.HunkView))):(null===(r=e.relativePath)||void 0===r?void 0:r.endsWith(b.sep))?n.commands.executeCommand("revealInExplorer",e.uri):n.workspace.openTextDocument(e.uri).then((e=>n.window.showTextDocument(e,{viewColumn:p.default.showDocumentColumn(),preview:!1})))}if(R instanceof d.HunkView)return C(R,k);if(R instanceof o.CommitItemView)return S(e,R.commit.hash);if(R instanceof m.BranchListingView||R instanceof u.RemoteBranchListingView||R instanceof l.TagListingView)return S(e,R.ref.commit);if(R instanceof s.StashItemView){const t=R.stash;return g.showStashDetail(e,t)}if(R instanceof f.IssueItemView){const t=R.issue,i=w.IssueView.encodeLocation(e,t);let n=p.default.createOrUpdateView(e,i,(()=>new w.IssueView(i,t)));return p.default.showView(i,n)}if(R instanceof v.PullRequestItemView){const t=R.pullRequest,i=y.PullRequestView.encodeLocation(e,t);let n=p.default.createOrUpdateView(e,i,(()=>new y.PullRequestView(i,t)));return p.default.showView(i,n)}n.window.setStatusBarMessage("There is no thing at point that could be visited",h.StatusMessageDisplayTimeout)},t.visitCommit=S},4798:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.worktree=void 0;const n=i(6645),o=i(2849),a=i(2977),r=i(7549),s={title:"Worktree",commands:[{label:"b",description:"Create new worktree",action:async function({repository:e}){const t=await a.default.chooseRef(e,"Checkout ");if(t){const i=await r.window.showInputBox({value:e.uri.fsPath,prompt:"Create worktree"});if(i){const n=["worktree","add",i,t];return await o.gitRun(e.gitRepository,n)}}}},{label:"c",description:"Create new branch and worktree",action:async function({repository:e}){const t=await r.window.showInputBox({value:e.uri.fsPath,prompt:"Create worktree"});if(t){const i=await a.default.chooseRef(e,"Create and checkout branch starting at");if(i){const n=await r.window.showInputBox({prompt:"Name for new branch"});if(n){const a=["worktree","add","-b",n,t,i];return await o.gitRun(e.gitRepository,a)}}}}}]};t.worktree=async function(e){return n.MenuUtil.showMenu(s,{repository:e})}},5058:(e,t)=>{var i;Object.defineProperty(t,"__esModule",{value:!0}),t.SemanticTokenTypes=t.MagitDocumentSelector=t.MagitUriScheme=t.StatusMessageDisplayTimeout=t.FinalLineBreakRegex=t.LineSplitterRegex=void 0,t.LineSplitterRegex=/\r?\n/g,t.FinalLineBreakRegex=/\r?\n$/g,t.StatusMessageDisplayTimeout=1e4,t.MagitUriScheme="magit",t.MagitDocumentSelector={scheme:t.MagitUriScheme,language:"magit"},(i=t.SemanticTokenTypes||(t.SemanticTokenTypes={})).RefName="magit-ref-name",i.RemoteRefName="magit-remote-ref-name",i.TagName="magit-tag-name"},6771:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.deactivate=t.activate=t.magitConfig=t.logPath=t.gitApi=t.processLog=t.views=t.magitRepositories=void 0;const n=i(7549),o=i(1954),a=i(367),r=i(499),s=i(5977),c=i(7707),d=i(9670),m=i(3426),u=i(5007),l=i(9333),g=i(7325),h=i(5995),p=i(7218),f=i(5058),w=i(4168),v=i(4188),y=i(7502),b=i(7095),C=i(7818),S=i(4864),k=i(7021),R=i(7622),x=i(5260),T=i(5064),P=i(6724),M=i(269),V=i(2523),A=i(4798),E=i(9238),D=i(3062),$=i(7042),U=i(8603),I=i(9553),L=i(3419),H=i(3934),_=i(2953),F=i(1076),O=i(4102),j=i(4063);function B(){let e=n.workspace.getConfiguration("magit");var i;t.magitConfig={displayBufferSameColumn:"same-column"===e.get("display-buffer-function"),forgeEnabled:e.get("forge-enabled"),hiddenStatusSections:(i=e.get("hide-status-sections"),Array.isArray(i)?new Set(i):new Set),quickSwitchEnabled:e.get("quick-switch-enabled")};let o=e.get("code-path");m.setCodePath(o)}t.magitRepositories=new Map,t.views=new Map,t.processLog=[],t.activate=function(e){const i=n.extensions.getExtension("vscode.git").exports;if(!i.enabled)throw new Error("vscode.git Git extension not enabled");B(),n.workspace.onDidChangeConfiguration((e=>{e.affectsConfiguration("magit")&&B()})),e.subscriptions.push(i.onDidChangeEnablement((e=>{if(!e)throw new Error("vscode.git Git extension was disabled")}))),t.gitApi=i.getAPI(1),t.logPath=e.logUri.fsPath,e.subscriptions.push(t.gitApi.onDidCloseRepository((e=>{t.magitRepositories.delete(e.rootUri.fsPath)})));const j=new o.default,N=new g.default,q=new h.default,W=n.Disposable.from(n.workspace.registerTextDocumentContentProvider(f.MagitUriScheme,j),n.languages.registerDocumentHighlightProvider(f.MagitDocumentSelector,N),n.languages.registerDocumentSemanticTokensProvider(f.MagitDocumentSelector,q,q.legend));e.subscriptions.push(j,W),e.subscriptions.push(n.commands.registerCommand("magit.status",c.magitStatus),n.commands.registerTextEditorCommand("magit.help",p.CommandPrimer.primeRepo(s.magitHelp,!1)),n.commands.registerTextEditorCommand("magit.dispatch",p.CommandPrimer.primeRepo(s.magitDispatch,!1)),n.commands.registerTextEditorCommand("magit.commit",p.CommandPrimer.primeRepo(m.magitCommit)),n.commands.registerTextEditorCommand("magit.refresh",p.CommandPrimer.primeRepo(c.magitRefresh)),n.commands.registerTextEditorCommand("magit.pulling",p.CommandPrimer.primeRepo(v.pulling)),n.commands.registerTextEditorCommand("magit.pushing",p.CommandPrimer.primeRepo(a.pushing)),n.commands.registerTextEditorCommand("magit.stashing",p.CommandPrimer.primeRepo(y.stashing)),n.commands.registerTextEditorCommand("magit.fetching",p.CommandPrimer.primeRepo(w.fetching)),n.commands.registerTextEditorCommand("magit.branching",p.CommandPrimer.primeRepo(r.branching)),n.commands.registerTextEditorCommand("magit.merging",p.CommandPrimer.primeRepo(S.merging)),n.commands.registerTextEditorCommand("magit.rebasing",p.CommandPrimer.primeRepo(k.rebasing)),n.commands.registerTextEditorCommand("magit.resetting",p.CommandPrimer.primeRepo(M.resetting)),n.commands.registerTextEditorCommand("magit.reset-mixed",p.CommandPrimer.primeRepo(M.resetMixed)),n.commands.registerTextEditorCommand("magit.reset-hard",p.CommandPrimer.primeRepo(M.resetHard)),n.commands.registerTextEditorCommand("magit.remoting",p.CommandPrimer.primeRepo(x.remoting)),n.commands.registerTextEditorCommand("magit.logging",p.CommandPrimer.primeRepo(T.logging,!1)),n.commands.registerTextEditorCommand("magit.show-refs",p.CommandPrimer.primeRepo(r.showRefs,!1)),n.commands.registerTextEditorCommand("magit.diffing",p.CommandPrimer.primeRepo(E.diffing,!1)),n.commands.registerTextEditorCommand("magit.tagging",p.CommandPrimer.primeRepo(V.tagging)),n.commands.registerTextEditorCommand("magit.cherry-picking",p.CommandPrimer.primeRepo(U.cherryPicking)),n.commands.registerTextEditorCommand("magit.reverting",p.CommandPrimer.primeRepo(I.reverting)),n.commands.registerTextEditorCommand("magit.ignoring",p.CommandPrimer.primeRepo(D.ignoring)),n.commands.registerTextEditorCommand("magit.running",p.CommandPrimer.primeRepo($.running)),n.commands.registerTextEditorCommand("magit.worktree",p.CommandPrimer.primeRepo(A.worktree)),n.commands.registerTextEditorCommand("magit.submodules",p.CommandPrimer.primeRepo(O.submodules)),n.commands.registerTextEditorCommand("magit.process-log",p.CommandPrimer.primeRepo(P.processView,!1)),n.commands.registerTextEditorCommand("magit.stage-all",p.CommandPrimer.primeRepo(u.magitStageAll)),n.commands.registerTextEditorCommand("magit.unstage-all",p.CommandPrimer.primeRepo(u.magitUnstageAll)),n.commands.registerTextEditorCommand("magit.visit-at-point",p.CommandPrimer.primeRepoAndView(d.magitVisitAtPoint,!1)),n.commands.registerTextEditorCommand("magit.apply-at-point",p.CommandPrimer.primeRepoAndView(b.magitApplyEntityAtPoint)),n.commands.registerTextEditorCommand("magit.discard-at-point",p.CommandPrimer.primeRepoAndView(C.magitDiscardAtPoint)),n.commands.registerTextEditorCommand("magit.reverse-at-point",p.CommandPrimer.primeRepoAndView(L.reverseAtPoint)),n.commands.registerTextEditorCommand("magit.stage",p.CommandPrimer.primeRepoAndView(u.magitStage)),n.commands.registerTextEditorCommand("magit.unstage",p.CommandPrimer.primeRepoAndView(u.magitUnstage)),n.commands.registerTextEditorCommand("magit.file-popup",p.CommandPrimer.primeFileCommand(R.filePopup,!1)),n.commands.registerTextEditorCommand("magit.blame-file",p.CommandPrimer.primeFileCommand(H.blameFile,!1)),n.commands.registerTextEditorCommand("magit.diff-file",p.CommandPrimer.primeFileCommand(E.diffFile,!1)),n.commands.registerTextEditorCommand("magit.stage-file",p.CommandPrimer.primeFileCommand(u.stageFile)),n.commands.registerTextEditorCommand("magit.unstage-file",p.CommandPrimer.primeFileCommand(u.unstageFile)),n.commands.registerTextEditorCommand("magit.copy-section-value",p.CommandPrimer.primeRepoAndView(_.copySectionValueCommand)),n.commands.registerTextEditorCommand("magit.copy-buffer-revision",p.CommandPrimer.primeRepoAndView(F.copyBufferRevisionCommands))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.toggle-fold",p.CommandPrimer.primeRepoAndView((async(e,t)=>{const i=t.click(n.window.activeTextEditor.selection.active);(null==i?void 0:i.isFoldable)&&(i.folded=!i.folded,t.triggerUpdate())}),!1))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.quit",l.quitMagitView)),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.move-next-entity",p.CommandPrimer.primeRepoAndView(l.moveToNextEntity,!1))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.move-previous-entity",p.CommandPrimer.primeRepoAndView(l.moveToPreviousEntity,!1))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.toggle-all-folds-in-change-section-at-point",p.CommandPrimer.primeRepoAndView(l.toggleAllFoldsInChangeSection,!0))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.save-and-close-editor",l.saveClose)),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.clear-and-abort-editor",l.clearSaveClose))},t.deactivate=function(){j.forgeRefreshInterval&&clearInterval(j.forgeRefreshInterval)}},6949:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getGithubForgeState=void 0;const n=i(7549),o=i(9709),a=["repo"];t.getGithubForgeState=async function(e){let t=e.replace(/.*github.com(\/|:)/,"").replace(".git","").split("/").filter(Boolean);const i=t[0],d=t[1];let m=await async function(){return(await n.authentication.getSession("github",a,{createIfNone:!0})).accessToken}(),[u,l]=await async function(e,t,i){let n=await async function(e,t){let i=await o.default.post("https://api.github.com/graphql").set("Authorization",`Bearer ${e}`).set("User-Agent","edamagit").send(JSON.stringify(t));return JSON.parse(i.data)}(e,{query:"query GetOpenPullRequests($owner: String!, $repo: String!) {\n            repository(owner: $owner, name: $repo) {\n              pullRequests(last:20, states: OPEN) {\n                edges { node {\n                  number\n                  title\n                  author {\n                    login\n                  }\n                  createdAt\n                  bodyText\n                  comments(first: 50) {\n                    edges { node {\n                      author { login }\n                      createdAt\n                      bodyText\n                    }}\n                  }\n                  labels(last: 10) {\n                    edges { node {\n                      name\n                      color\n                    }}\n                  }\n                  commits(last: 100) {\n                    edges { node {\n                      commit {\n                        oid\n                        message\n                        author { name email }\n                        authoredDate\n                        committedDate\n                        parents(last: 5) {\n                          edges { node {\n                            oid\n                          }}\n                        }\n                      }\n                    }}\n                  }\n              }}}\n              issues(last:50, states: OPEN) {\n                edges { node {\n                  number\n                  title\n                  author {\n                    login\n                  }\n                  createdAt\n                  bodyText\n                  comments(first: 50) {\n                    edges { node {\n                      author { login }\n                      createdAt\n                      bodyText\n                    }}\n                  }\n                  labels(last: 10) {\n                    edges { node {\n                      name\n                      color\n                    }}\n                  }\n              }}}\n          }}",variables:{owner:t,repo:i}});if(n.errors)throw new Error(n.errors);return[n.data.repository.pullRequests.edges.map((({node:e})=>({number:e.number,title:e.title,remoteRef:`pull/${e.number}/head`,author:e.author.login,createdAt:e.createdAt,bodyText:e.bodyText,comments:e.comments.edges.map(r),assignees:[],labels:e.labels.edges.map(s),commits:e.commits.edges.map(c)}))).reverse(),n.data.repository.issues.edges.map((({node:e})=>({number:e.number,title:e.title,author:e.author.login,createdAt:e.createdAt,bodyText:e.bodyText,comments:e.comments.edges.map(r),assignees:[],labels:e.labels.edges.map(s)}))).reverse()]}(m,i,d);return{forgeRemote:e.toString(),pullRequests:u,issues:l}};const r=({node:e})=>({author:e.author.login,createdAt:e.createdAt,bodyText:e.bodyText}),s=({node:e})=>({name:e.name,color:e.color}),c=({node:{commit:e}})=>({hash:e.oid,message:e.message,parents:e.parents.edges.map((e=>e.oid)),authorDate:e.authoredDate,authorName:e.author.name,authorEmail:e.author.email,commitDate:e.committedDate})},4063:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.forgeStatus=t.forgeRefreshInterval=void 0;const n=i(6949),o=i(6771),a=12e4,r=new Map;t.forgeStatus=async function(e){var i;if(!0!==o.magitConfig.forgeEnabled)return;let s=null!==(i=e.find((e=>"upstream"===e.name)))&&void 0!==i?i:e.find((e=>"origin"===e.name));if(void 0!==(null==s?void 0:s.fetchUrl)){let e=function(e){var t;let i=r.get(e);if(i){if(null!==(t=i.updatedAt)&&void 0!==t?t:0>Date.now()-a)return r.set(e,{...i,lastAccessed:Date.now()}),null==i?void 0:i.state;r.delete(e)}}(s.fetchUrl);if(e)return e;let i=function(e){if(e.includes("github.com"))return n.getGithubForgeState}(s.fetchUrl);if(i)try{let e=await i(s.fetchUrl);return c=s.fetchUrl,d=e,m=i,r.set(c,{state:d,updatedAt:Date.now(),refresh:m,lastAccessed:Date.now()}),t.forgeRefreshInterval||(t.forgeRefreshInterval=setInterval((()=>{0===r.entries.length&&t.forgeRefreshInterval&&(clearInterval(t.forgeRefreshInterval),t.forgeRefreshInterval=void 0),r.forEach((async(e,t)=>{e.lastAccessed<Date.now()-15e5?r.delete(t):r.set(t,{state:await e.refresh(t),updatedAt:Date.now(),refresh:e.refresh,lastAccessed:e.lastAccessed})}))}),a)),e}catch(e){return void console.error(e)}}var c,d,m}},9709:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(7211);class o{constructor(e,t="GET",i={}){this.url=e,this.method=t,this.headers=i}set(e,t){return this.headers[e]=t,this}send(e){return new Promise(((t,i)=>{let o={method:this.method,headers:{"Content-Type":"application/json","Content-Length":Buffer.byteLength(e),...this.headers}};const a=n.request(this.url,o,(e=>{var n;let o=null!==(n=e.statusCode)&&void 0!==n?n:0;if(!(o>=200&&o<300))return i(new Error(`Response status code: ${e.statusCode}`));let a=[];e.on("data",(e=>{a.push(e)})).on("end",(()=>{t({status:o,data:Buffer.concat(a).toString()})}))}));a.on("error",(e=>{i(e)})),e&&a.write(e),a.end()}))}}t.default=o,o.get=e=>new o(e),o.post=e=>new o(e,"POST")},6645:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MenuUtil=void 0;const n=i(7549),o=i(6771);class a{static showMenu(e,t){let i=e.commands.map((e=>({...e,description:`\t${e.description}`})));if(t.switches){const n=t.switches.filter((e=>e.activated)).map((e=>e.name)).join(" "),o=`[ ${n} ]`;i.push({label:"-",description:`\tSwitches ${n.length>0?o:""}`,action:async t=>{const i=await a.showSwitchesMenu(t);return a.showMenu(e,{...t,switches:i})}})}if(t.options){const n=t.options.filter((e=>e.activated)).map((e=>`${e.name}"${e.value}"`)).join(" "),o=`[ ${n} ]`;i.push({label:"=",description:`\tOptions ${n.length>0?o:""}`,action:async t=>{const i=await a.showOptionsMenu(t);return a.showMenu(e,{...t,options:i})}})}return a.runMenu({...e,commands:i},t)}static switchesToArgs(e){var t;return null!==(t=null==e?void 0:e.filter((e=>e.activated)).map((e=>e.name)))&&void 0!==t?t:[]}static optionsToArgs(e){var t;return null!==(t=null==e?void 0:e.filter((e=>e.activated)).map((e=>`${e.name}${e.value}`)))&&void 0!==t?t:[]}static runMenu(e,t){return new Promise(((i,o)=>{let a=!0;const r=n.window.createQuickPick();r.title=e.title,r.items=e.commands;const s=r.onDidChangeValue((async e=>{if("q"===r.value)return r.hide();const n=r.items.filter((e=>e.label===r.value));if(n.length>0){r.value="",a=!1,r.hide();try{await n[0].action(t),i()}catch(e){o(e)}}})),c=r.onDidAccept((async()=>{if(r.activeItems.length>0){const e=r.activeItems[0];a=!1,r.hide();try{await e.action(t),i()}catch(e){o(e)}}})),d=r.onDidHide((()=>{r.dispose(),s.dispose(),c.dispose(),d.dispose(),a&&i()}));r.show()}))}static showSwitchesMenu(e){let t=e.switches.map((e=>({label:e.key,detail:e.name,description:`\t${e.description}`,picked:e.activated})));return a.showSwitchLikeMenu(t,e,(async e=>({...e,picked:!e.picked})),((e,{switches:t})=>t.map((t=>({...t,activated:void 0!==e.selectedItems.find((e=>e.label===t.key))})))),"Switches (press letter for switches you want to enable)",!0,"-")}static showOptionsMenu(e){let t=e.options.map((e=>({label:e.key,detail:e.activated?`${e.name}"${e.value}"`:e.name,description:`\t${e.description}`,picked:e.activated})));return a.showSwitchLikeMenu(t,e,(async e=>{let[t,i,...o]=e.detail.split('"'),a=e.picked?i:await n.window.showInputBox({prompt:`${t}=`});return{...e,picked:!e.picked,detail:`${t}"${a}"`}}),((e,{options:t})=>t.map((t=>{var i;let n=e.selectedItems.find((e=>e.label===t.key));return{...t,activated:void 0!==n,value:null===(i=null==n?void 0:n.detail)||void 0===i?void 0:i.split('"')[1]}}))),"Options (press the letter of the option you want to set)",!0,"=")}static matchesSwitchOrOption(e,t){return e===t||e===t.replace("-","")||e===t.replace("=","")}static showSwitchLikeMenu(e,t,i,r,s="",c=!1,d){return new Promise(((m,u)=>{let l=!0,g=!0;const h=n.window.createQuickPick();h.canSelectMany=c,h.title=s,h.items=e,c&&(h.selectedItems=h.items.filter((e=>e.picked)));const p=h.onDidChangeValue((async e=>{if("q"===h.value)return h.hide();if(d&&h.value===d)return;let t=h.value;h.value="",g=!1;let n=[];for(let e of h.items)a.matchesSwitchOrOption(t,e.label)?(n.push(await i(e)),o.magitConfig.quickSwitchEnabled&&h.hide()):n.push({...e});h.items=n,c&&(h.selectedItems=h.items.filter((e=>e.picked))),g=!0,h.show()})),f=h.onDidAccept((()=>{l=!1,h.hide(),m(r(h,t))})),w=h.onDidHide((()=>{g&&(h.dispose(),p.dispose(),f.dispose(),w.dispose(),l&&m(r(h,t)))}));h.show()}))}}t.MenuUtil=a},5659:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PickMenuUtil=void 0;const n=i(7549);class o{static showMenu(e,t,i){return new Promise(((o,a)=>{let r=!0;const s=n.window.createQuickPick();s.items=e,s.matchOnDescription=!0,s.placeholder=t;const c=s.onDidAccept((async()=>{if(s.activeItems.length>0){const e=s.activeItems[0];r=!1,s.hide(),o(e.meta)}else if(i){let e=s.value;r=!1,s.hide(),o(i(e))}})),d=s.onDidHide((()=>{s.dispose(),c.dispose(),d.dispose(),r&&o(void 0)}));s.show()}))}static showMenuWithFreeform(e,t){return o.showMenu(e,t,(e=>e))}}t.PickMenuUtil=o},7217:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MagitError=void 0,t.MagitError=class{constructor(e,t){this.friendlyMessage=e,this.error=t,this.message=t.message,t.gitErrorCode&&(this.gitErrorCode=t.gitErrorCode)}}},1954:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(7549),o=i(6771),a=i(5058),r=i(7135),s=i(2977);t.default=class{constructor(){this.viewUpdatedEmitter=new n.EventEmitter,this.onDidChange=this.viewUpdatedEmitter.event,this._subscriptions=n.Disposable.from(n.workspace.onDidCloseTextDocument((e=>{e.uri.scheme===a.MagitUriScheme&&o.views.delete(e.uri.toString())})),n.workspace.onDidSaveTextDocument((async e=>{for(const t of n.window.visibleTextEditors)if(t.document.uri.scheme===a.MagitUriScheme&&r.default.isDescendant(t.document.uri.query,e.uri.fsPath)){const e=await s.default.getCurrentMagitRepo(t.document.uri);if(!e)return;return s.default.magitStatusAndUpdate(e)}})))}dispose(){this._subscriptions.dispose(),this.viewUpdatedEmitter.dispose()}provideTextDocumentContent(e){const t=o.views.get(e.toString());return t?(t.emitter=this.viewUpdatedEmitter,t.render(0).join("\n")):""}}},7325:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(7549),o=i(6771);t.default=class{dispose(){}provideDocumentHighlights(e,t,i){const a=[],r=o.views.get(e.uri.toString());if(r){const e=r.click(t);(null==e?void 0:e.isHighlightable)&&a.push(new n.DocumentHighlight(e.range,n.DocumentHighlightKind.Text))}return a}}},5995:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(7549),o=i(6771),a=i(5058),r=i(6029);t.default=class{constructor(){this.legend=new n.SemanticTokensLegend(Object.values(a.SemanticTokenTypes),[])}dispose(){}provideDocumentSemanticTokens(e){const t=o.views.get(e.uri.toString()),i=new n.SemanticTokensBuilder(this.legend);return t&&this.visitNode(t,i),i.build()}visitNode(e,t){if(e instanceof r.SemanticTextView&&e.tokens.forEach((e=>{t.push(e.range,e.tokenType)})),e.folded){if(e.subViews.length){let i=e.subViews[0];i instanceof r.SemanticTextView&&i.tokens.forEach((e=>{t.push(e.range,e.tokenType)}))}}else e.subViews.forEach((e=>this.visitNode(e,t)))}}},561:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getCommit=void 0;const i={};t.getCommit=function(e,t){if(i[t])return i[t];const n=e.getCommit(t);return i[t]=n,n}},7135:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(5622);class o{static isWindowsPath(e){return/^[a-zA-Z]:\\/.test(e)}static isDescendant(e,t){return e===t||(e.charAt(e.length-1)!==n.sep&&(e+=n.sep),o.isWindowsPath(e)&&(e=e.toLowerCase(),t=t.toLowerCase()),t.startsWith(e))}static uriPathRelativeTo(e,t){return e.path.slice(t.path.length+1)}static fileName(e){let t=e.fsPath.split(/[/\\]/g);return 0===t[t.length-1].length&&t.pop(),t.length>0?t[t.length-1]:""}static fileExtension(e){const t=e.split(".");return t.length>0?t[t.length-1]:""}}t.default=o},4200:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(6771);t.default=class{static logGitCommand(e){const t={command:["git",...e],index:n.processLog.length,status:"pending"};return n.processLog.push(t),n.processLog.length>100&&n.processLog.shift(),t}static logGitResult(e,t){t.stdout=e.stdout,t.stderr=e.stderr,t.exitCode=e.exitCode}static logGitError(e,t){var i;const n=null!==(i=e.stderr)&&void 0!==i?i:e.message;t.stderr=n,t.exitCode=void 0!==e.exitCode?e.exitCode:1}}},2849:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.gitRun=t.LogLevel=void 0;const n=i(4200);var o;!function(e){e[e.None=0]="None",e[e.Error=1]="Error",e[e.Detailed=2]="Detailed"}(o=t.LogLevel||(t.LogLevel={})),t.gitRun=async function(e,t,i,a=o.Detailed){let r;a>o.None&&(r=n.default.logGitCommand(t));try{let s=await e._repository.repository.exec(t,i);return a===o.Detailed&&r&&n.default.logGitResult(s,r),s}catch(e){throw a>o.None&&r&&n.default.logGitError(e,r),e}}},7849:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(5058);class o{static diffToHunks(e,t){const i=e.indexOf("@@"),o=e.slice(0,i);return-1===i?[]:e.replace(n.FinalLineBreakRegex,"").slice(i).split(/\n(?=^@@.*@@.*$)/gm).map((e=>({diff:e,diffHeader:o,uri:t})))}static parseMergeStatus(e,t){var i;const o=null===(i=t.match(/'(.*?)'/g))||void 0===i?void 0:i.map((e=>e.slice(1,e.length-1))),a=e.replace(n.FinalLineBreakRegex,"");if(o)return[a,o]}static parseRevListLeftRight(e){const t=[],i=[];return e.replace(n.FinalLineBreakRegex,"").split(n.LineSplitterRegex).forEach((e=>{switch(e.charAt(0)){case"<":t.push(e.slice(1));break;case">":i.push(e.slice(1))}})),[t,i]}static parseSequencerTodo(e){return e?e.split(n.LineSplitterRegex).filter((e=>"#"!==e.charAt(0))).map((e=>{const[t,i,...n]=e.split(" ");return{hash:i,message:n.join(" "),parents:[]}})):[]}static commitDetailTextToCommit(e){const t=/(?:^From )(.*?) /gm.exec(e),i=/(?:^Subject: )(.*?)$/gm.exec(e),n=/(?:^From: )(.*?) </gm.exec(e);return{hash:(null==t?void 0:t.length)&&(null==t?void 0:t.length)>1?t[1]:"",message:(null==i?void 0:i.length)&&(null==i?void 0:i.length)>1?i[1]:"",parents:[],authorEmail:(null==n?void 0:n.length)&&(null==n?void 0:n.length)>1?n[1]:""}}static remoteBranchFullNameToSegments(e){if(e){const[t,...i]=e.split("/");return[t,i.join("/")]}return["",""]}static shortHash(e){return e?e.slice(0,7):""}static shortCommitMessage(e){return e?e.split("\n")[0]:""}static generatePatchFromChangeHunkView(e,t,i=!1){if(!t||t.isEmpty)return`${e.changeHunk.diffHeader}${e.changeHunk.diff}\n`;let o="";const a=e.changeHunk,r=e.range.start.translate(1),s=e.range.with(r).intersection(t);if(s){const[e,...t]=a.diff.split(n.LineSplitterRegex),c=s.start.line-r.line,d=s.end.line-r.line,m=/^\+.*/,u=/^-.*/,l=new Set;let g=0,h=0;for(let e=c;e<=d;e++){const i=t[e];if(m.test(i))g++;else{if(!u.test(i))continue;h++}l.add(e)}let p=0,f=0;const w=[];t.forEach(((e,t)=>{m.test(e)&&!l.has(t)?(p++,i&&w.push(" "+e.slice(1))):u.test(e)&&!l.has(t)?(f++,i||w.push(" "+e.slice(1))):w.push(e)}));const v=w.join("\n"),y=/(?<=,)\d+(?= \+)/g,b=/(?<=,)\d+(?= @@)/g,C=Number.parseInt(e.match(y)[0].toString());let S,k=C+(g-h);i?(S=e.replace(y,(C+p-f).toString()),S=S.replace(b,(k+p-f).toString())):S=e.replace(b,k.toString()),o=`${S}\n${v}`}else o=a.diff;return o.split(n.LineSplitterRegex).length<=1&&(o=a.diff),`${a.diffHeader}${o}\n`}static truncate(e,t){return e.length>t?e.substring(0,t-3)+"...":e}static formatError(e){var t,i;let n=null!==(i=null!==(t=e.friendlyMessage)&&void 0!==t?t:e.stderr)&&void 0!==i?i:e.message;return n=n.replace("error: ",""),o.truncate(n,350)}}t.default=o},1587:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(2849);t.default=class{static setConfigVariable(e,t,i){let o=["config","--local",t,i];return n.gitRun(e.gitRepository,o)}}},2977:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(7549),o=i(6771),a=i(7549),r=i(7707),s=i(7135),c=i(5659),d=i(7849),m=i(5058);t.default=class{static getMagitRepoThatContainsFile(e){let t=Array.from(o.magitRepositories.entries()),i=t.filter((([t,i])=>s.default.isDescendant(t,e.fsPath)));if(!(t.length<o.gitApi.repositories.length&&o.gitApi.repositories.filter((t=>s.default.isDescendant(t.rootUri.fsPath,e.fsPath))).length>i.length))return 1===i.length?i[0][1]:i.length>0?i.sort((([e,t],[i,n])=>i.length-e.length))[0][1]:void 0}static async getCurrentMagitRepo(e){let t=this.getCurrentMagitRepoNO_STATUS(e);if(!t){let i=await this.discoverRepo(e);i&&(t=await r.internalMagitStatus(i),o.magitRepositories.set(t.uri.fsPath,t))}return t}static getCurrentMagitRepoNO_STATUS(e){let t;return e&&(t=o.magitRepositories.get(e.query),t||(t=this.getMagitRepoThatContainsFile(e))),t}static discoverRepoThatContainsFile(e){let t=o.gitApi.repositories.filter((t=>s.default.isDescendant(t.rootUri.fsPath,e.fsPath)));return 1===t.length?t[0]:t.length>0?t.sort(((e,t)=>t.rootUri.fsPath.length-e.rootUri.fsPath.length))[0]:void 0}static async discoverRepo(e){var t;let i;if(1===o.gitApi.repositories.length)i=o.gitApi.repositories[0];else if(o.gitApi.repositories.length&&(e&&(i=this.discoverRepoThatContainsFile(e)),i||1!==(null===(t=n.workspace.workspaceFolders)||void 0===t?void 0:t.length)||(i=this.discoverRepoThatContainsFile(n.workspace.workspaceFolders[0].uri)),!i)){const e=o.gitApi.repositories.map((e=>({label:e.rootUri.fsPath,meta:{repository:e}})));e.push({label:"Init repo",meta:{initRepo:!0}});let t=await c.PickMenuUtil.showMenu(e,"Which repository?");if(null==t?void 0:t.initRepo)return void a.commands.executeCommand("git.init");if(!(null==t?void 0:t.repository))return;i=t.repository}return i||await a.commands.executeCommand("git.init"),i}static getCurrentMagitRepoAndView(e){return[o.magitRepositories.get(e.query),o.views.get(e.toString())]}static async magitStatusAndUpdate(e){let t=await r.internalMagitStatus(e.gitRepository);o.magitRepositories.set(t.uri.fsPath,t),o.views.forEach((e=>e.needsUpdate&&e.uri.query===t.uri.fsPath?e.update(t):void 0))}static magitAnythingModified(e){var t,i;return e.indexChanges.length>0||e.workingTreeChanges.length>0||(null!==(i=null===(t=e.mergeChanges)||void 0===t?void 0:t.length)&&void 0!==i?i:0)>0}static async chooseRef(e,t,i=!1,n=!1,o=!0,a=!1){var r,s;const m=[];return i&&(null===(r=e.HEAD)||void 0===r?void 0:r.name)&&m.push({label:e.HEAD.name,description:d.default.shortHash(e.HEAD.commit),meta:e.HEAD.name}),n&&m.push({label:"HEAD",description:d.default.shortHash(null===(s=e.HEAD)||void 0===s?void 0:s.commit),meta:"HEAD"}),m.push(...e.refs.filter((t=>{var i;return t.name!==(null===(i=e.HEAD)||void 0===i?void 0:i.name)&&(!a||1===t.type)})).sort(((e,t)=>e.type-t.type)).map((e=>({label:e.name,description:d.default.shortHash(e.commit),meta:e.name})))),o?c.PickMenuUtil.showMenuWithFreeform(m,t):c.PickMenuUtil.showMenu(m,t)}static async chooseCommit(e,t){var i;const n=null!==(i=e.log.map((e=>({label:d.default.shortHash(e.hash),description:e.message.concat(" ").concat(e.hash),meta:e.hash}))))&&void 0!==i?i:[];return c.PickMenuUtil.showMenuWithFreeform(n,t)}static async chooseTag(e,t){const i=e.refs.filter((e=>2===e.type)).map((e=>e.name));return a.window.showQuickPick(i,{placeHolder:t})}static async confirmAction(e){let t=`${e} (y or n)`;return new Promise((e=>{let i=!0;const n=a.window.createInputBox();n.validationMessage=t;let o=n.onDidChangeValue((t=>{t.toLowerCase().includes("y")?(i=!1,n.hide(),e(!0)):(t.toLowerCase().includes("n")||t.toLowerCase().includes("q"))&&n.hide()})),r=n.onDidHide((()=>{n.dispose(),o.dispose(),r.dispose(),i&&(a.window.setStatusBarMessage("Abort",m.StatusMessageDisplayTimeout),e(!1))}));n.show()}))}}},3551:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(7549),o=i(6029),a=i(5058),r=i(7849),s=i(6771);class c{static createOrUpdateView(e,t,i){const n=s.views.get(t.toString());return n?(n.update(e),n):i()}static async showView(e,t,i={preview:!1,preserveFocus:!1}){s.views.set(e.toString(),t);let o=await n.workspace.openTextDocument(e);return n.window.showTextDocument(o,{viewColumn:c.showDocumentColumn(),...i})}static showDocumentColumn(){var e,t;const i=null!==(t=null===(e=n.window.activeTextEditor)||void 0===e?void 0:e.viewColumn)&&void 0!==t?t:0;return s.magitConfig.displayBufferSameColumn?i:i>n.ViewColumn.One?n.ViewColumn.One:n.ViewColumn.Two}static async applyActionForSelection(e,t,i,n,o){if(!i.isSingleLine){let a=c.multilineClick(t,i,n);if(a.length>0){let t=[];for(const n of a)t.push(await o(e,i,n));return t}}return o(e,i,t.click(i.active))}static multilineClick(e,t,i){let o=[],a=null;for(let r=t.start.line;r<=t.end.line;r++){let t=e.click(new n.Position(r,0));t&&i.find((e=>t instanceof e))&&(a||(a=t.constructor),a===t.constructor&&o.push(t))}return o}static generateRefTokensLine(e,t){const i=(null!=t?t:[]).filter((t=>t.commit===e)).sort((e=>e.type.valueOf()));let n={},s=[];return i.forEach((e=>{var t;if(!e.name)return;if(1===e.type){let[c,d]=r.default.remoteBranchFullNameToSegments(e.name),m=i.find((e=>e.name===d&&0===e.type));if(m&&m.name)return n[m.name]=!0,s.push(new o.Token(c+"/",a.SemanticTokenTypes.RemoteRefName),new o.Token(null!==(t=m.name)&&void 0!==t?t:"",a.SemanticTokenTypes.RefName)),void s.push(" ")}if(n[e.name])return;let c=a.SemanticTokenTypes.RefName;e.remote?c=a.SemanticTokenTypes.RemoteRefName:2===e.type&&(c=a.SemanticTokenTypes.TagName),s.push(new o.Token(e.name,c)),s.push(" ")})),s}}t.default=c},9410:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BlameView=void 0;const n=i(154),o=i(7549),a=i(5058),r=i(8802);class s extends n.DocumentView{constructor(e,t){super(e),this.blame=t,this.isHighlightable=!1,this.needsUpdate=!1;const i=new r.TextView(t);i.isHighlightable=!1,this.addSubview(i)}update(e){}static encodeLocation(e,t){return o.Uri.parse(`${a.MagitUriScheme}:${s.UriPath}/${t.path}?${e.uri.fsPath}#${t.path}#${s.index++}`)}}t.BlameView=s,s.UriPath="Blame.magit@",s.index=0},5775:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BranchHeaderSectionView=void 0;const n=i(8096),o=i(8738),a=i(5664),r=i(8802),s=i(6029),c=i(5058);class d extends n.View{constructor(e){var t;super(),this.isFoldable=!0,(null==e?void 0:e.commitDetails)?(this.addSubview(new o.BranchHeaderView("Head",e)),e.upstreamRemote&&this.addSubview(new a.RemoteBranchHeaderView(e.upstreamRemote.rebase?"Rebase":"Merge",e.upstreamRemote)),e.pushRemote&&this.addSubview(new a.RemoteBranchHeaderView("Push",e.pushRemote)),(null===(t=e.tag)||void 0===t?void 0:t.name)&&this.addSubview(new s.SemanticTextView("Tag: ".padEnd(10),new s.Token(e.tag.name,c.SemanticTokenTypes.TagName)))):this.addSubview(new r.TextView("In the beginning there was darkness"))}get id(){return"HEAD_section"}}t.BranchHeaderSectionView=d},8738:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BranchHeaderView=void 0;const n=i(7849),o=i(6029),a=i(5058);class r extends o.SemanticTextView{constructor(e,t){var i;super(`${e}:`.padEnd(10),new o.Token(null!==(i=t.name)&&void 0!==i?i:n.default.shortHash(t.commit),a.SemanticTokenTypes.RefName),` ${n.default.shortCommitMessage(t.commitDetails.message)}`)}onClicked(){}}t.BranchHeaderView=r},8202:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BranchListingView=void 0;const n=i(8802);class o extends n.TextView{constructor(e,t=!1){super(`${t?"*":" "} ${e.name}`),this.ref=e}get id(){var e;return(null===(e=this.ref.name)||void 0===e?void 0:e.toString())+this.ref.type.toString()}}t.BranchListingView=o},8304:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BranchesSectionView=void 0;const n=i(8096),o=i(5923),a=i(5966),r=i(8202);class s extends n.View{constructor(e,t){super(),this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(o.Section.Branches,e.length),...e.map((e=>new r.BranchListingView(e,e.name===(null==t?void 0:t.name)))),new a.LineBreakView]}get id(){return o.Section.Branches.toString()}}t.BranchesSectionView=s},5664:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RemoteBranchHeaderView=void 0;const n=i(7849),o=i(5058),a=i(6029);class r extends a.SemanticTextView{constructor(e,t){var i;super(`${e}:`.padEnd(10),new a.Token(`${t.remote}/${t.name}`,o.SemanticTokenTypes.RemoteRefName),` ${n.default.shortCommitMessage(null===(i=t.commit)||void 0===i?void 0:i.message)}`)}}t.RemoteBranchHeaderView=r},4997:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChangeHeaderView=void 0;const n=i(8802);class o extends n.UnclickableTextView{constructor(e){super(),this.change=e;const t=function(e){switch(e){case 0:case 5:return"modified";case 1:return"new file";case 2:case 6:return"deleted";case 3:return"renamed";case 4:return"copied";case 7:return"";case 10:case 11:case 12:case 13:case 14:case 15:case 16:return"unmerged";default:return""}}(this.change.status),i=function(e){switch(e){case 10:return"added by us";case 11:return"added by them";case 12:return"deleted by us";case 13:return"deleted by them";case 14:return"both added";case 15:return"both deleted";case 16:return"both modified";default:return}}(this.change.status);this.textContent=`${t?t.padEnd(11):""}${this.change.relativePath}${i?` (${i})`:""}`}}t.ChangeHeaderView=o},2090:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChangeView=void 0;const n=i(8096),o=i(2481),a=i(4997);class r extends n.View{constructor(e,t,i=""){super(),this.section=e,this.change=t,this.context=i,this.isFoldable=!0,this.foldedByDefault=!0,this.addSubview(new a.ChangeHeaderView(t)),this.change.hunks&&this.addSubview(...this.change.hunks.map((t=>new o.HunkView(e,t))))}get id(){return this.change.uri.toString()+this.section.toString()+this.context}}t.ChangeView=r},2804:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChangeSectionView=void 0;const n=i(8096),o=i(2090),a=i(5923),r=i(5966);class s extends n.View{constructor(e,t,i=""){super(),this.section=e,this.changes=t,this.context=i,this.isFoldable=!0,this.subViews=[new a.SectionHeaderView(e,t.length),...t.map((t=>new o.ChangeView(e,t,i))),new r.LineBreakView]}get id(){return this.section.toString()+this.context}}t.ChangeSectionView=s},2481:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.HunkView=void 0;const n=i(8802);class o extends n.TextView{constructor(e,t){super(t.diff),this.section=e,this.changeHunk=t,this.isFoldable=!0}get id(){return this.changeHunk.diff}}t.HunkView=o},2931:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CherryPickingSectionView=void 0;const n=i(8096),o=i(5966),a=i(5923),r=i(9957);class s extends n.View{constructor(e,t){super(),this.isFoldable=!0;const i=[];for(const n of t){if(n.hash===e.originalHead.hash)break;i.push(n)}this.subViews=[new a.SectionHeaderView(a.Section.CherryPicking),...e.upcomingCommits.map((e=>new r.CommitItemView(e,"pick"))),new r.CommitItemView(e.currentCommit,"join"),...i.map((e=>new r.CommitItemView(e,"done"))),new r.CommitItemView(e.originalHead,"onto"),new o.LineBreakView]}get id(){return"CherryPicking"}}t.CherryPickingSectionView=s},3857:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CommitDetailView=void 0;const n=i(154),o=i(7549),a=i(5058),r=i(8802);class s extends n.DocumentView{constructor(e,t,i){super(e),this.commit=t,this.isHighlightable=!1,this.needsUpdate=!1;const n=new r.TextView(i);n.isHighlightable=!1,this.addSubview(n)}update(e){}static encodeLocation(e,t){return o.Uri.parse(`${a.MagitUriScheme}:${s.UriPath}?${e.uri.fsPath}#${t}`)}}t.CommitDetailView=s,s.UriPath="commit.magit"},9957:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CommitItemView=t.CommitSectionView=void 0;const n=i(8096),o=i(5923),a=i(5966),r=i(7849),s=i(6029),c=i(3551);class d extends n.View{constructor(e,t,i){super(),this.section=e,this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(e),...t.map((e=>new m(e,void 0,i))),new a.LineBreakView]}get id(){return this.section.toString()}}t.CommitSectionView=d;class m extends s.SemanticTextView{constructor(e,t,i){super(),this.commit=e,this.content=[`${void 0!==t?t+" ":""}${r.default.shortHash(e.hash)} `,...c.default.generateRefTokensLine(e.hash,i),`${r.default.shortCommitMessage(e.message)}`]}}t.CommitItemView=m},3753:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnsourcedCommitSectionView=void 0;const n=i(8096),o=i(5923),a=i(5966),r=i(9957);class s extends n.View{constructor(e,t,i,n){super(),this.section=e,this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(e,i.length,`${t.remote}/${t.name}`),...i.map((e=>new r.CommitItemView(e,void 0,n))),new a.LineBreakView]}get id(){return this.section.toString()}}t.UnsourcedCommitSectionView=s},4707:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DiffView=void 0;const n=i(154),o=i(7549),a=i(5058),r=i(8802);class s extends n.DocumentView{constructor(e,t){super(e),this.diff=t,this.isHighlightable=!1,this.needsUpdate=!1;const i=new r.TextView(t);i.isHighlightable=!1,this.addSubview(i)}update(e){}static encodeLocation(e,t){return o.Uri.parse(`${a.MagitUriScheme}:${s.UriPath}?${e.uri.fsPath}#${t}${s.index++}`)}}t.DiffView=s,s.UriPath="diff.magit",s.index=0},6925:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.IssueItemView=t.IssueSectionView=void 0;const n=i(8096),o=i(5923),a=i(5966),r=i(8802);class s extends n.View{constructor(e){super(),this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(o.Section.Issues,e.length),...e.map((e=>new c(e))),new a.LineBreakView]}get id(){return o.Section.Issues.toString()}}t.IssueSectionView=s;class c extends r.TextView{constructor(e){super(),this.issue=e;let t=e.labels.map((e=>`[${e.name}]`)).join(" ");this.textContent=`${c.getSection(e)} ${e.title}${t.length?" "+t:""}`}get section(){return c.getSection(this.issue)}static getSection(e){return`#${e.number}`}}t.IssueItemView=c},9416:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.IssueCommentView=t.IssueCommentSection=t.IssueView=void 0;const n=i(154),o=i(7549),a=i(5058),r=i(8802),s=i(8096),c=i(5966),d=i(1454);class m extends n.DocumentView{constructor(e,t){super(e),this.issue=t,this.provideContent(t)}provideContent(e){this.subViews=[new u(e),new c.LineBreakView,new g({author:e.author,bodyText:e.bodyText,createdAt:e.createdAt}),new l(e.comments)]}update(e){var t;let i=null===(t=e.forgeState)||void 0===t?void 0:t.issues.find((e=>e.number===this.issue.number));i&&(this.issue=i,this.provideContent(this.issue),this.triggerUpdate())}static encodeLocation(e,t){return o.Uri.parse(`${a.MagitUriScheme}:${m.UriPath}?${e.uri.fsPath}#${t.number}`)}}t.IssueView=m,m.UriPath="issue.magit";class u extends s.View{constructor(e){super(),this.issue=e,this.isFoldable=!0,this.addSubview(new r.UnclickableTextView(`#${e.number}: ${e.title}`)),this.addSubview(new r.TextView(`Title: ${e.title}`)),this.addSubview(new r.TextView("State: open")),this.addSubview(new r.TextView(`Labels: ${e.labels.map((e=>`[${e.name}]`)).join(" ")}`))}get id(){return`issueHeader#${this.issue.number}`}}class l extends s.View{constructor(e){super(),this.addSubview(...e.map((e=>new g(e))))}}t.IssueCommentSection=l;class g extends s.View{constructor(e){super(),this.comment=e,this.isFoldable=!0,this.addSubview(new h(e),new r.TextView(e.bodyText),new c.LineBreakView(2))}get id(){return`issueComment#${this.comment.author}${this.comment.createdAt}`}}t.IssueCommentView=g;class h extends r.UnclickableTextView{constructor(e){super();let t=d.default(Date.parse(e.createdAt));this.textContent=`• ${e.author} ${t}`}}},4004:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PullRequestItemView=t.PullRequestSectionView=void 0;const n=i(8096),o=i(5923),a=i(5966),r=i(8802),s=i(9957);class c extends n.View{constructor(e){super(),this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(o.Section.PullRequests,e.length),...e.map((e=>new d(e))),new a.LineBreakView]}get id(){return o.Section.PullRequests.toString()}}t.PullRequestSectionView=c;class d extends n.View{constructor(e){super(),this.pullRequest=e,this.isFoldable=!0,this.foldedByDefault=!0;let t=e.labels.map((e=>`[${e.name}]`)).join(" ");this.addSubview(new r.UnclickableTextView(`${d.getSection(e)} ${e.title}${t.length?" "+t:""}`),...e.commits.map((e=>new s.CommitItemView(e))))}get id(){return`pullRequestItem#${this.pullRequest.number}`}get section(){return d.getSection(this.pullRequest)}static getSection(e){return`#${e.number}`}}t.PullRequestItemView=d},4386:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PullRequestView=void 0;const n=i(154),o=i(7549),a=i(5058),r=i(8802),s=i(8096),c=i(5966),d=i(9416);class m extends n.DocumentView{constructor(e,t){super(e),this.pullRequest=t,this.provideContent(t)}provideContent(e){this.subViews=[new u(e),new c.LineBreakView,new d.IssueCommentView({author:e.author,bodyText:e.bodyText,createdAt:e.createdAt}),new d.IssueCommentSection(e.comments)]}update(e){var t;let i=null===(t=e.forgeState)||void 0===t?void 0:t.pullRequests.find((e=>e.number===this.pullRequest.number));i&&(this.pullRequest=i,this.provideContent(this.pullRequest),this.triggerUpdate())}static encodeLocation(e,t){return o.Uri.parse(`${a.MagitUriScheme}:${m.UriPath}?${e.uri.fsPath}#${t.number}`)}}t.PullRequestView=m,m.UriPath="pr.magit";class u extends s.View{constructor(e){super(),this.pullRequest=e,this.isFoldable=!0,this.addSubview(new r.UnclickableTextView(`#${e.number}: ${e.title}`)),this.addSubview(new r.TextView(`Title: ${e.title}`)),this.addSubview(new r.TextView("State: open")),this.addSubview(new r.TextView(`Labels: ${e.labels.map((e=>`[${e.name}]`)).join(" ")}`))}get id(){return`pullRequestHeader#${this.pullRequest.number}`}}},154:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentView=void 0;const n=i(8096);class o extends n.View{constructor(e){super(),this.uri=e,this.isHighlightable=!1,this.needsUpdate=!0}triggerUpdate(){this.emitter&&this.emitter.fire(this.uri)}}t.DocumentView=o},5966:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LineBreakView=void 0;const n=i(8802);class o extends n.TextView{constructor(e=1){super("\n".repeat(e-1))}}t.LineBreakView=o},5923:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SectionHeaderView=t.Section=void 0;const n=i(8802);var o;(o=t.Section||(t.Section={})).Untracked="Untracked files",o.Unstaged="Unstaged changes",o.Staged="Staged changes",o.Stashes="Stashes",o.RecentCommits="Recent commits",o.UnmergedInto="Unmerged into",o.UnpushedTo="Unpushed to",o.UnpulledFrom="Unpulled from",o.Merging="Merging",o.CherryPicking="Cherry Picking",o.Reverting="Reverting",o.HEAD="HEAD",o.Branches="Branches",o.Remote="Remote",o.Tags="Tags",o.PullRequests="Pull Requests",o.Issues="Issues";class a extends n.UnclickableTextView{constructor(e,t,i){super(`${e.valueOf()}${i?" "+i:""}${t?" ("+t+")":""}`)}}t.SectionHeaderView=a},6029:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Token=t.SemanticTextView=void 0;const n=i(7549),o=i(8802);class a extends o.TextView{constructor(...e){super(),this.tokens=[],this.content=e}render(e){this.tokens=[];let t="";return this.content.forEach((i=>{if("string"==typeof i||i instanceof String)t+=i;else{let o=t.length,a=o+i.textContent.length;t+=i.textContent,this.tokens.push(new r(i.textContent,i.tokenType,new n.Range(e,o,e,a)))}})),super.textContent=t,super.render(e)}}t.SemanticTextView=a;class r{constructor(e,t,i=new n.Range(0,0,0,0)){this.textContent=e,this.tokenType=t,this.range=i}get length(){return this.textContent.length}}t.Token=r},8802:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnclickableTextView=t.TextView=void 0;const n=i(8096),o=i(7549),a=i(5058);class r extends n.View{constructor(e=""){super(),this.textContent=e}render(e){this.retrieveFold();const t=this.textContent.split(a.LineSplitterRegex);return this.range=new o.Range(e,0,e+t.length-1,t[t.length-1].length),[this.folded?t[0]:this.textContent]}}t.TextView=r,t.UnclickableTextView=class extends r{onClicked(){}}},8096:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;const n=i(7549),o=new Map;t.View=class{constructor(){this._range=new n.Range(0,0,0,0),this._folded=!1,this.subViews=[],this.isFoldable=!1,this.foldedByDefault=!1,this.isHighlightable=!0}get folded(){return this._folded}set folded(e){this.id&&o.set(this.id,e),this._folded=e}get range(){return this.folded?new n.Range(new n.Position(this._range.start.line,this._range.start.character),new n.Position(this._range.start.line,300)):this._range}set range(e){this._range=e}retrieveFold(){var e;this.isFoldable&&this.id&&(this._folded=null!==(e=o.get(this.id))&&void 0!==e?e:this.foldedByDefault)}render(e){this.retrieveFold();let t=e;const i=[];return this.subViews.forEach((e=>{const n=e.render(t);t+=e.range.end.line-e.range.start.line+1,i.push(...n)})),this.range=new n.Range(e,0,t-1,i.length>0?i[i.length-1].length:0),this.folded?i.slice(0,1):i}get id(){}onClicked(){return this}click(e){if(this.range.contains(e)){const t=this.onClicked();if(this.folded)return t;let i;for(const t of this.subViews)if(i=t.click(e),i)break;return null!=i?i:t}}addSubview(...e){this.subViews.push(...e)}}},660:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.HelpView=void 0;const n=i(154),o=i(7549),a=i(5058),r=i(8802),s=i(306);class c extends n.DocumentView{constructor(e,t){super(e),this.isHighlightable=!1,this.needsUpdate=!1;let i=c.generateBindings(t),n=new r.TextView(c.createHelpText(i));n.isHighlightable=!1,this.addSubview(n)}update(e){}static encodeLocation(e){return o.Uri.parse(`${a.MagitUriScheme}:${c.UriPath}?${e.uri.path}#help`)}static joinTexts(e,t){let i=t.length>0?t[0]:"";for(let n=1;n<t.length;n++){const o=t[n-1],a=t[n],r=o.length<=e?e-o.length:0;i+=" ".repeat(r)+a}return i}static keybindingToDisplayKey(e){return/shift(\+|-)[a-zA-Z]/g.test(e)?e.substring(6).toLocaleUpperCase():"enter"===e?"RET":"tab"===e?"TAB":e}static generateBindings(e){let t=s.contributes.keybindings.reduce(((e,t)=>({...e,[t.command]:c.keybindingToDisplayKey(t.key)})),{});return t=e.reduce(((e,t)=>({...e,[t.command]:c.keybindingToDisplayKey(t.key)})),t),t}static createHelpText(e){return`Popup and dwim commands\n  ${c.joinTexts(19,[`${e["magit.cherry-picking"]} Cherry-pick`,`${e["magit.branching"]} Branch`,`${e["magit.commit"]} Commit`])}\n  ${c.joinTexts(19,[`${e["magit.diffing"]} Diff`,`${e["magit.fetching"]} Fetch`,`${e["magit.pulling"]} Pull`])}\n  ${c.joinTexts(19,[`${e["magit.ignoring"]} Ignore`,`${e["magit.logging"]} Log`,`${e["magit.merging"]} Merge`])}\n  ${c.joinTexts(19,[`${e["magit.remoting"]} Remote`,`${e["magit.pushing"]} Push`,`${e["magit.rebasing"]} Rebase`])}\n  ${c.joinTexts(19,[`${e["magit.tagging"]} Tag`,`${e["magit.reverting"]} Revert`,`${e["magit.resetting"]} Reset`])}\n  ${c.joinTexts(19,[`${e["magit.show-refs"]} Show Refs`,`${e["magit.stashing"]} Stash`,`${e["magit.running"]} Run`])}\n  ${c.joinTexts(19,[`${e["magit.worktree"]} Worktree`,`${e["magit.submodules"]} Submodules`,`${e["magit.process-log"]} Process Log`])}\n\nApplying changes\n  ${c.joinTexts(17,[`${e["magit.apply-at-point"]} Apply`,`${e["magit.stage"]} Stage`,`${e["magit.unstage"]} Unstage`])}\n  ${c.joinTexts(17,[`${e["magit.reverse-at-point"]} Reverse`,`${e["magit.stage-all"]} Stage all`,`${e["magit.unstage-all"]} Unstage all`])}\n  ${e["magit.discard-at-point"]} Discard\n\nEssential commands\n  ${c.joinTexts(9,[e["magit.refresh"],"refresh current buffer"])}\n  ${c.joinTexts(9,[e["magit.toggle-fold"],"toggle section at point"])}\n  ${c.joinTexts(9,[e["magit.visit-at-point"],"visit thing at point"])}\n  ${c.joinTexts(9,[e["magit.process-log"],"show git process view"])}\n  ${c.joinTexts(9,[e["magit.quit"],"exit / close magit view"])}\n\n  ${c.joinTexts(9,[e["magit.move-next-entity"],"Move cursor to next entity"])}\n  ${c.joinTexts(9,[e["magit.move-previous-entity"],"Move cursor to previous entity"])}`}}t.HelpView=c,c.UriPath="help.magit"},2384:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CommitLongFormItemView=void 0;const n=i(1454),o=i(7549),a=i(5058),r=i(7849),s=i(9957),c=i(154),d=i(8802),m=i(6029),u=i(5058);class l extends c.DocumentView{constructor(e,t){super(e),this.subViews=[new d.TextView(`Commits in ${t.revName}`),...t.entries.map((e=>new g(e)))]}update(e){}static encodeLocation(e){return o.Uri.parse(`${a.MagitUriScheme}:${l.UriPath}?${e.uri.fsPath}#${l.index++}`)}}t.default=l,l.UriPath="log.magit",l.index=0;class g extends s.CommitItemView{constructor(e){var t,i;super(e.commit),this.logEntry=e;const o=n.default(e.time),a=`${r.default.shortHash(e.commit.hash)} `,s=null!==(i=null===(t=e.graph)||void 0===t?void 0:t[0])&&void 0!==i?i:"";this.content=[];const c=r.default.shortCommitMessage(e.commit.message);this.content.push(`${a}${s}`);const d=e.refs.map((e=>new m.Token(e,u.SemanticTokenTypes.RefName)));d.length&&(this.content.push(" ("),d.forEach((e=>{this.content.push(e," ")})),this.content.pop(),this.content.push(") "));const l=70-this.content.reduce(((e,t)=>e+t.length),0),g=h(e.author,17,18),p=h(c,l,l+1);if(this.content.push(`${p}${g}${o}`),e.graph)for(let t=1;t<e.graph.length;t++){const i=e.graph[t],n=" ".repeat(8);this.content.push(`\n${n}${i}`)}}}function h(e,t,i){let n=e.length>=t?e.substr(0,t-1)+"…":e;return i&&(n=n.padEnd(i)),n}t.CommitLongFormItemView=g},8650:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(5058),o=i(6771),a=i(2804),r=i(5923),s=i(154),c=i(1702),d=i(9957),m=i(8802),u=i(5966),l=i(7549),g=i(5775),h=i(1814),p=i(3753),f=i(3550),w=i(2931),v=i(3834),y=i(7218),b=i(4004),C=i(6925);class S extends s.DocumentView{constructor(e,t){super(e),this.provideContent(t)}provideContent(e){var t,i,s,l,S,k,R,x,T,P,M,V,A,E,D,$,U,I,L,H,_,F;this.HEAD=e.HEAD,this.subViews=[];let O=y.getLatestGitError(e);O&&this.addSubview(new m.TextView(`GitError! ${O.split(n.LineSplitterRegex)[0]} [ $ for detailed log ]`)),this.addSubview(new g.BranchHeaderSectionView(e.HEAD)),this.addSubview(new u.LineBreakView),e.mergingState&&this.addSubview(new h.MergingSectionView(e.mergingState)),e.rebasingState&&this.addSubview(new f.RebasingSectionView(e.rebasingState)),e.cherryPickingState&&this.addSubview(new w.CherryPickingSectionView(e.cherryPickingState,e.log)),e.revertingState&&this.addSubview(new v.RevertingSectionView(e.revertingState,e.log)),e.untrackedFiles.length&&!o.magitConfig.hiddenStatusSections.has("untracked")&&this.addSubview(new a.ChangeSectionView(r.Section.Untracked,e.untrackedFiles)),!e.workingTreeChanges.length&&!e.mergeChanges.length||o.magitConfig.hiddenStatusSections.has("unstaged")||this.addSubview(new a.ChangeSectionView(r.Section.Unstaged,[...e.mergeChanges,...e.workingTreeChanges])),e.indexChanges.length&&!o.magitConfig.hiddenStatusSections.has("staged")&&this.addSubview(new a.ChangeSectionView(r.Section.Staged,e.indexChanges)),(null===(t=e.stashes)||void 0===t?void 0:t.length)&&!o.magitConfig.hiddenStatusSections.has("stashes")&&this.addSubview(new c.StashSectionView(e.stashes));const j=e.remotes.reduce(((e,t)=>t.branches.concat(e)),e.branches.concat(e.tags));(null===(l=null===(s=null===(i=e.HEAD)||void 0===i?void 0:i.upstreamRemote)||void 0===s?void 0:s.commitsAhead)||void 0===l?void 0:l.length)&&!o.magitConfig.hiddenStatusSections.has("unmerged")?this.addSubview(new p.UnsourcedCommitSectionView(r.Section.UnmergedInto,e.HEAD.upstreamRemote,e.HEAD.upstreamRemote.commitsAhead,j)):(null===(R=null===(k=null===(S=e.HEAD)||void 0===S?void 0:S.pushRemote)||void 0===k?void 0:k.commitsAhead)||void 0===R?void 0:R.length)&&!o.magitConfig.hiddenStatusSections.has("unpushed")&&this.addSubview(new p.UnsourcedCommitSectionView(r.Section.UnpushedTo,e.HEAD.pushRemote,e.HEAD.pushRemote.commitsAhead,j)),e.log.length>0&&!(null===(P=null===(T=null===(x=e.HEAD)||void 0===x?void 0:x.upstreamRemote)||void 0===T?void 0:T.commitsAhead)||void 0===P?void 0:P.length)&&!o.magitConfig.hiddenStatusSections.has("recent commits")&&this.addSubview(new d.CommitSectionView(r.Section.RecentCommits,e.log.slice(0,10),j)),(null===(A=null===(V=null===(M=e.HEAD)||void 0===M?void 0:M.upstreamRemote)||void 0===V?void 0:V.commitsBehind)||void 0===A?void 0:A.length)&&!o.magitConfig.hiddenStatusSections.has("unpulled")?this.addSubview(new p.UnsourcedCommitSectionView(r.Section.UnpulledFrom,e.HEAD.upstreamRemote,e.HEAD.upstreamRemote.commitsBehind,j)):(null===($=null===(D=null===(E=e.HEAD)||void 0===E?void 0:E.pushRemote)||void 0===D?void 0:D.commitsBehind)||void 0===$?void 0:$.length)&&this.addSubview(new p.UnsourcedCommitSectionView(r.Section.UnpulledFrom,e.HEAD.pushRemote,e.HEAD.pushRemote.commitsBehind,j)),(null===(I=null===(U=e.forgeState)||void 0===U?void 0:U.pullRequests)||void 0===I?void 0:I.length)&&!o.magitConfig.hiddenStatusSections.has("pull requests")&&this.addSubview(new b.PullRequestSectionView(null===(L=e.forgeState)||void 0===L?void 0:L.pullRequests)),(null===(_=null===(H=e.forgeState)||void 0===H?void 0:H.issues)||void 0===_?void 0:_.length)&&!o.magitConfig.hiddenStatusSections.has("issues")&&this.addSubview(new C.IssueSectionView(null===(F=e.forgeState)||void 0===F?void 0:F.issues))}update(e){this.provideContent(e),this.triggerUpdate()}static encodeLocation(e){return l.Uri.parse(`${n.MagitUriScheme}:${S.UriPath}?${e.uri.fsPath}`)}}t.default=S,S.UriPath="status.magit"},1814:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MergingSectionView=void 0;const n=i(8096),o=i(5966),a=i(9957),r=i(5923);class s extends n.View{constructor(e){super(),this.isFoldable=!0,this.subViews=[new r.SectionHeaderView(r.Section.Merging,e.commits.length,`${e.mergingBranches[0]}`),...e.commits.map((e=>new a.CommitItemView(e))),new o.LineBreakView]}get id(){return"Merging"}}t.MergingSectionView=s},3725:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(5058),o=i(154),a=i(7549),r=i(6771),s=i(8096),c=i(8802);class d extends s.View{constructor(e){super(),this.entry=e,this.isFoldable=!0,this.addSubview(new c.TextView(this.renderCommandStatus(e)+e.command.join(" "))),e.stdout&&this.addSubview(new c.TextView(e.stdout)),e.stderr&&this.addSubview(new c.TextView(e.stderr))}get id(){return""+this.entry.index}renderCommandStatus(e){let t="run";return void 0!==e.exitCode&&(t=e.exitCode.toString()),`[${t}] `}}class m extends o.DocumentView{constructor(e){super(e),this.provideContent()}provideContent(){r.processLog.length>0?this.subViews=r.processLog.map((e=>new d(e))):this.subViews=[new c.TextView("(No entries yet)")]}update(e){this.provideContent(),this.triggerUpdate()}static encodeLocation(e){return a.Uri.parse(`${n.MagitUriScheme}:${m.UriPath}?${e.uri.path}#process`)}}t.default=m,m.UriPath="process.magit"},3550:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RebasingSectionView=void 0;const n=i(8096),o=i(8802),a=i(5966),r=i(9957);class s extends n.View{constructor(e){super(),this.isFoldable=!0,this.subViews=[new o.UnclickableTextView(`Rebasing ${e.origBranchName} onto ${e.onto.name}`),...e.upcomingCommits.map((e=>new r.CommitItemView(e,"pick"))),new r.CommitItemView(e.currentCommit,"join"),...e.doneCommits.map((e=>new r.CommitItemView(e,"done"))),new r.CommitItemView(e.onto.commitDetails,"onto"),new a.LineBreakView]}get id(){return"Rebasing"}}t.RebasingSectionView=s},4542:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RemoteBranchListingView=void 0;const n=i(8802),o=i(7849);class a extends n.TextView{constructor(e){super(),this.ref=e;let[t,i]=o.default.remoteBranchFullNameToSegments(e.name);this.textContent=`  ${i}`}get id(){var e;return(null===(e=this.ref.name)||void 0===e?void 0:e.toString())+this.ref.type.toString()}}t.RemoteBranchListingView=a},6972:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RemoteSectionView=void 0;const n=i(8096),o=i(5923),a=i(5966),r=i(4542);class s extends n.View{constructor(e){var t;super(),this.remote=e,this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(o.Section.Remote,e.branches.length,`${e.name} (${null!==(t=e.fetchUrl)&&void 0!==t?t:e.pushUrl})`),...e.branches.map((e=>new r.RemoteBranchListingView(e))),new a.LineBreakView]}get id(){var e;return`${o.Section.Remote.toString()} ${this.remote.name} (${null!==(e=this.remote.fetchUrl)&&void 0!==e?e:this.remote.pushUrl})`}}t.RemoteSectionView=s},3834:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RevertingSectionView=void 0;const n=i(8096),o=i(5966),a=i(5923),r=i(9957);class s extends n.View{constructor(e,t){super(),this.isFoldable=!0;const i=[];for(const n of t){if(n.hash===e.originalHead.hash)break;i.push(n)}this.subViews=[new a.SectionHeaderView(a.Section.Reverting),...e.upcomingCommits.map((e=>new r.CommitItemView(e,"revert"))),new r.CommitItemView(e.currentCommit,"join"),...i.map((e=>new r.CommitItemView(e,"done"))),new r.CommitItemView(e.originalHead,"onto"),new o.LineBreakView]}get id(){return"Reverting"}}t.RevertingSectionView=s},6711:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(5058),o=i(5923),a=i(154),r=i(7549),s=i(2804);class c extends a.DocumentView{constructor(e,t,i){super(e),this.section=i,this.provideContent(t,!0)}provideContent(e,t=!1){let i;i=this.section===o.Section.Staged?new s.ChangeSectionView(o.Section.Staged,e.indexChanges,"sectionDiffView"):new s.ChangeSectionView(o.Section.Unstaged,e.workingTreeChanges,"sectionDiffView"),t&&i.subViews.forEach((e=>{e.folded=!1,e.subViews.forEach((e=>e.folded=!1))})),this.subViews=[i]}update(e){this.provideContent(e),this.triggerUpdate()}static encodeLocation(e){return r.Uri.parse(`${n.MagitUriScheme}:${c.UriPath}?${e.uri.fsPath}#${c.index++}`)}}t.default=c,c.UriPath="staged.magit",c.index=0},7456:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(5058),o=i(5923),a=i(154),r=i(7549),s=i(4803),c=i(8304),d=i(6972);class m extends a.DocumentView{constructor(e,t){super(e),this.provideContent(t)}provideContent(e){this.subViews=[new o.SectionHeaderView(o.Section.HEAD),new c.BranchesSectionView(e.branches,e.HEAD),...e.remotes.map((e=>new d.RemoteSectionView(e))),new s.TagSectionView(e.tags)]}update(e){this.provideContent(e),this.triggerUpdate()}static encodeLocation(e){return r.Uri.parse(`${n.MagitUriScheme}:${m.UriPath}?${e.uri.fsPath}`)}}t.default=m,m.UriPath="refs.magit"},8631:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StashDetailView=void 0;const n=i(154),o=i(7549),a=i(5058),r=i(8802),s=i(2804),c=i(5923);class d extends n.DocumentView{constructor(e,t,i,n){super(e),this.uri=e,this.needsUpdate=!1,this.addSubview(new r.TextView(`Stash@{${t.index}} ${t.description}`)),n.length&&this.addSubview(new s.ChangeSectionView(c.Section.Untracked,n,`-stashDetail@{${t.index}}`)),this.addSubview(new r.TextView(i))}update(e){}static encodeLocation(e,t){return o.Uri.parse(`${a.MagitUriScheme}:${d.UriPath}?${e.uri.fsPath}#stash@{${t.index}}#${d.index++}`)}}t.StashDetailView=d,d.UriPath="stash.magit",d.index=0},1702:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StashItemView=t.StashSectionView=void 0;const n=i(8096),o=i(5923),a=i(8802),r=i(5966);class s extends n.View{constructor(e){super(),this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(o.Section.Stashes,e.length),...e.map((e=>new c(e))),new r.LineBreakView]}get id(){return o.Section.Stashes.toString()}}t.StashSectionView=s;class c extends a.TextView{constructor(e){super(`${c.getSection(e)} ${e.description}`),this.stash=e}get section(){return c.getSection(this.stash)}static getSection(e){return`stash@{${e.index}}`}}t.StashItemView=c},2703:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(5058),o=i(154),a=i(7549),r=i(8802);class s extends o.DocumentView{constructor(e,t){super(e),this.provideContent(t)}provideContent(e){this.subViews=[...e.submodules.map((e=>new r.TextView(`${e.name}\t\t${e.path}\t\t${e.url}`)))]}update(e){this.provideContent(e),this.triggerUpdate()}static encodeLocation(e){return a.Uri.parse(`${n.MagitUriScheme}:${s.UriPath}?${e.uri.fsPath}`)}}t.default=s,s.UriPath="submodules.magit"},6713:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TagListingView=void 0;const n=i(8802);class o extends n.TextView{constructor(e){super(`  ${e.name}`),this.ref=e}get id(){var e;return(null===(e=this.ref.name)||void 0===e?void 0:e.toString())+this.ref.type.toString()}}t.TagListingView=o},4803:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TagSectionView=void 0;const n=i(8096),o=i(5923),a=i(5966),r=i(6713);class s extends n.View{constructor(e){super(),this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(o.Section.Tags,e.length),...e.map((e=>new r.TagListingView(e))),new a.LineBreakView]}get id(){return o.Section.Tags.toString()}}t.TagSectionView=s},306:e=>{e.exports=JSON.parse('{"name":"magit","preview":true,"displayName":"edamagit","description":"Magit for Visual Studio Code","publisher":"kahole","author":{"name":"Kristian Andersen Hole"},"version":"0.6.20","engines":{"vscode":"^1.50.0"},"icon":"images/edamagit_logo.png","categories":["Other"],"keywords":["magit","git","emacs","commit"],"license":"MIT","homepage":"https://github.com/kahole/edamagit/blob/master/README.md","repository":{"type":"git","url":"https://github.com/kahole/edamagit.git"},"bugs":{"url":"https://github.com/kahole/edamagit/issues"},"capabilities":{"untrustedWorkspaces":{"supported":true,"description":"Uses git on the files in the workspace"}},"activationEvents":["onCommand:magit.status","onCommand:magit.dispatch","onCommand:magit.commit","onCommand:magit.branching","onCommand:magit.merging","onCommand:magit.rebasing","onCommand:magit.resetting","onCommand:magit.pushing","onCommand:magit.pulling","onCommand:magit.remoting","onCommand:magit.logging","onCommand:magit.show-refs","onCommand:magit.diffing","onCommand:magit.tagging","onCommand:magit.cherry-picking","onCommand:magit.reverting","onCommand:magit.ignoring","onCommand:magit.running","onCommand:magit.worktree","onCommand:magit.help","onCommand:magit.stashing","onCommand:magit.submodules","onCommand:magit.fetching","onCommand:magit.process-log","onCommand:magit.file-popup","onCommand:magit.blame-file","onCommand:magit.stage-file","onCommand:magit.stage-all","onCommand:magit.unstage-file","onCommand:magit.unstage-all","onCommand:magit.diff-file","onCommand:magit.save-and-close-editor","onCommand:magit.clear-and-abort-editor"],"main":"./dist/extension","contributes":{"commands":[{"command":"magit.status","title":"Magit Status"},{"command":"magit.dispatch","title":"Magit Dispatch"},{"command":"magit.file-popup","title":"Magit File Popup"},{"command":"magit.visit-at-point","title":"Magit Visit-at-point"},{"command":"magit.apply-at-point","title":"Magit Apply-at-point"},{"command":"magit.discard-at-point","title":"Magit Discard-at-point"},{"command":"magit.reverse-at-point","title":"Magit Reverse-at-point"},{"command":"magit.commit","title":"Magit Commit"},{"command":"magit.branching","title":"Magit Branching"},{"command":"magit.merging","title":"Magit Merging"},{"command":"magit.rebasing","title":"Magit Rebasing"},{"command":"magit.resetting","title":"Magit Resetting"},{"command":"magit.pushing","title":"Magit Pushing"},{"command":"magit.pulling","title":"Magit Pulling"},{"command":"magit.remoting","title":"Magit Remoting"},{"command":"magit.logging","title":"Magit Logging"},{"command":"magit.show-refs","title":"Magit Show Refs"},{"command":"magit.diffing","title":"Magit Diffing"},{"command":"magit.tagging","title":"Magit Tagging"},{"command":"magit.cherry-picking","title":"Magit Cherry Picking"},{"command":"magit.reverting","title":"Magit Reverting"},{"command":"magit.ignoring","title":"Magit Ignore"},{"command":"magit.running","title":"Magit Running"},{"command":"magit.worktree","title":"Magit Worktree"},{"command":"magit.stage","title":"Magit Stage"},{"command":"magit.stage-all","title":"Magit Stage All"},{"command":"magit.unstage","title":"Magit Unstage"},{"command":"magit.unstage-all","title":"Magit Unstage All"},{"command":"magit.help","title":"Magit Help"},{"command":"magit.stashing","title":"Magit Stashing"},{"command":"magit.submodules","title":"Magit Submodules"},{"command":"magit.fetching","title":"Magit Fetching"},{"command":"magit.process-log","title":"Magit Process Log"},{"command":"magit.blame-file","title":"Magit Blame File"},{"command":"magit.diff-file","title":"Magit Diff File"},{"command":"magit.stage-file","title":"Magit Stage File"},{"command":"magit.unstage-file","title":"Magit Unstage File"},{"command":"magit.copy-section-value","title":"Magit Copy Section Value"},{"command":"magit.copy-buffer-revision","title":"Magit Copy Buffer Revision"}],"menus":{"commandPalette":[{"command":"magit.status"},{"command":"magit.dispatch"},{"command":"magit.help","when":"editorLangId == magit"},{"command":"magit.branching","when":"activeEditor"},{"command":"magit.merging","when":"activeEditor"},{"command":"magit.rebasing","when":"activeEditor"},{"command":"magit.resetting","when":"activeEditor"},{"command":"magit.remoting","when":"activeEditor"},{"command":"magit.logging","when":"activeEditor"},{"command":"magit.show-refs","when":"activeEditor"},{"command":"magit.diffing","when":"activeEditor"},{"command":"magit.tagging","when":"activeEditor"},{"command":"magit.cherry-picking","when":"activeEditor"},{"command":"magit.reverting","when":"activeEditor"},{"command":"magit.ignoring","when":"activeEditor"},{"command":"magit.running","when":"activeEditor"},{"command":"magit.worktree","when":"activeEditor"},{"command":"magit.visit-at-point","when":"editorLangId == magit"},{"command":"magit.apply-at-point","when":"editorLangId == magit"},{"command":"magit.discard-at-point","when":"editorLangId == magit"},{"command":"magit.reverse-at-point","when":"editorLangId == magit"},{"command":"magit.stage","when":"editorLangId == magit"},{"command":"magit.stage-all","when":"activeEditor"},{"command":"magit.unstage","when":"editorLangId == magit"},{"command":"magit.unstage-all","when":"activeEditor"},{"command":"magit.commit","when":"activeEditor"},{"command":"magit.pushing","when":"activeEditor"},{"command":"magit.pulling","when":"activeEditor"},{"command":"magit.stashing","when":"activeEditor"},{"command":"magit.submodules","when":"activeEditor"},{"command":"magit.fetching","when":"activeEditor"},{"command":"magit.process-log","when":"activeEditor"},{"command":"magit.file-popup","when":"activeEditor && editorLangId != magit"},{"command":"magit.blame-file","when":"activeEditor && editorLangId != magit"},{"command":"magit.diff-file","when":"activeEditor && editorLangId != magit"},{"command":"magit.stage-file","when":"activeEditor && editorLangId != magit"},{"command":"magit.unstage-file","when":"activeEditor && editorLangId != magit"},{"command":"magit.copy-section-value","when":"editorLangId == magit"},{"command":"magit.copy-buffer-revision","when":"editorLangId == magit"}]},"languages":[{"id":"magit","aliases":["Magit"],"extensions":[".magit"],"configuration":"./languages/magit.language-configuration.json"}],"configurationDefaults":{"[magit]":{"editor.lineNumbers":"off","editor.minimap.enabled":false,"editor.renderWhitespace":"none"}},"configuration":{"title":"Edamagit","properties":{"magit.display-buffer-function":{"type":"string","enum":["other-column","same-column"],"enumDescriptions":["Open Edamagit views to the side of the current editor group.","Open Edamagit views in the current editor group."],"default":"other-column","description":"Choose where new buffers will be displayed."},"magit.code-path":{"type":"string","description":"Choose specific path to execude vscode. code or codium for example. Can also be a specific path like /Users/me/.nix-profile/bin/codium/"},"magit.forge-enabled":{"type":"boolean","default":false,"description":"Enable Forge functionality (show pull requests, issues, etc from e.g. Github)"},"magit.hide-status-sections":{"type":"array","default":[],"description":"Array of section names to be hidden in status view. The section names that may be hidden are: \'issues\', \'pull requests\', \'recent commits\', \'staged\', \'stashes\', \'unmerged\', \'unpulled\', \'unpushed\', \'unstaged\', \'untracked\'."},"magit.quick-switch-enabled":{"type":"boolean","default":false,"description":"Enable automatic confirm for switch menu after enabling a switch (e.g. --force)"}}},"grammars":[{"language":"magit","scopeName":"source.magit","path":"./syntaxes/magit.tmGrammar.json"}],"semanticTokenTypes":[{"id":"magit-ref-name","superType":"label","description":"Name of a git ref."},{"id":"magit-remote-ref-name","superType":"label","description":"Name of a git ref from a remote."},{"id":"magit-tag-name","superType":"label","description":"Name of a git tag."}],"semanticTokenScopes":[{"scopes":{"magit-ref-name":["entity.name.type.template"],"magit-remote-ref-name":["variable.other.constant"],"magit-tag-name":["string.highlight"]}}],"keybindings":[{"command":"magit.status","key":"alt+x g"},{"command":"magit.dispatch","key":"alt+x ctrl+g"},{"command":"magit.file-popup","key":"alt+x alt+g","when":"activeEditor"},{"command":"magit.toggle-fold","key":"tab","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.refresh","key":"g","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.help","key":"shift+-","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.help","key":"shift+/","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.visit-at-point","key":"enter","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.apply-at-point","key":"a","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.discard-at-point","key":"k","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.reverse-at-point","key":"v","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.commit","key":"c","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.branching","key":"b","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.merging","key":"m","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.rebasing","key":"r","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.resetting","key":"shift+x","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.reset-mixed","key":"x","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.reset-hard","key":"ctrl+u x","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.remoting","key":"shift+m","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.logging","key":"l","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.show-refs","key":"y","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress|Visual).*$/"},{"command":"magit.diffing","key":"d","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.tagging","key":"t","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.cherry-picking","key":"shift+a","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.reverting","key":"shift+v","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.ignoring","key":"i","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.ignoring","key":"shift+i","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.running","key":"shift+1","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.worktree","key":"shift+5","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.pushing","key":"shift+p","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.pulling","key":"shift+f","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.stashing","key":"z","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.submodules","key":"o","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.fetching","key":"f","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.stage","key":"s","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.stage-all","key":"shift+s","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.unstage","key":"u","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.unstage-all","key":"shift+u","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.process-log","key":"shift+4","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.quit","key":"q","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.move-next-entity","key":"ctrl+j","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.move-previous-entity","key":"ctrl+k","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.save-and-close-editor","key":"ctrl+c ctrl+c","when":"editorTextFocus && editorLangId == git-commit"},{"command":"magit.clear-and-abort-editor","key":"ctrl+c ctrl+k","when":"editorTextFocus && editorLangId == git-commit"},{"command":"magit.save-and-close-editor","key":"ctrl+c ctrl+c","when":"editorTextFocus && editorLangId == git-rebase"},{"command":"magit.clear-and-abort-editor","key":"ctrl+c ctrl+k","when":"editorTextFocus && editorLangId == git-rebase"}]},"scripts":{"vscode:prepublish":"webpack --mode production","compile":"webpack --mode development","watch":"webpack --mode development --watch","test-compile":"tsc -p ./"},"devDependencies":{"@types/glob":"^7.1.3","@types/mocha":"^8.2.0","@types/node":"^14.14.14","@types/vscode":"^1.50.0","@typescript-eslint/eslint-plugin":"^4.10.0","@typescript-eslint/parser":"^4.10.0","eslint":"^7.16.0","eslint-loader":"^4.0.2","glob":"^7.1.6","mocha":"^8.3.2","ts-loader":"^8.0.12","typescript":"^4.1.3","vscode-test":"^1.4.1","webpack":"^5.11.0","webpack-cli":"^4.2.0"},"dependencies":{"date-fns":"^2.16.1","jsonc-parser":"^3.0.0"}}')},5747:e=>{e.exports=require("fs")},7211:e=>{e.exports=require("https")},2087:e=>{e.exports=require("os")},5622:e=>{e.exports=require("path")},1765:e=>{e.exports=require("process")},7549:e=>{e.exports=require("vscode")}},t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n](o,o.exports,i),o.exports}return i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i(6771)})();
//# sourceMappingURL=extension.js.map